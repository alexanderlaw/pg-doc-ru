# Alexander Lakhin <a.lakhin@postgrespro.ru>, 2012, 2013, 2015, 2016, 2017.
# Pavel Luzanov <p.luzanov@postgrespro.ru>, 2015, 2016.
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2017-08-29 10:53+0300\n"
"PO-Revision-Date: 2017-08-09 16:36+0300\n"
"Last-Translator: Alexander Lakhin <a.lakhin@postgrespro.ru>\n"
"Language-Team: Russian <pgsql-docs@lists.postgrespro.ru>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Lokalize 2.0\n"

#: dfunc.xml:5(title)
msgid "Compiling and Linking Dynamically-loaded Functions"
msgstr "Компиляция и компоновка динамически загружаемых функций"

#: dfunc.xml:13(indexterm)
msgid "<primary>shared library</primary>"
msgstr "<primary>разделяемая библиотека</primary>"

#: dfunc.xml:7(para)
msgid ""
"Before you are able to use your <productname>PostgreSQL</productname> "
"extension functions written in C, they must be compiled and linked in a "
"special way to produce a file that can be dynamically loaded by the server. "
"To be precise, a <firstterm>shared library</firstterm> needs to be created."
"<placeholder-1/>"
msgstr ""
"Прежде чем вы сможете использовать ваши написанные на C функции, расширяющие "
"возможности <productname>PostgreSQL</productname>, их необходимо "
"скомпилировать и скомпоновать особым образом, чтобы сервер мог динамически "
"загрузить полученный файл. Точнее говоря, вам необходимо создать "
"<firstterm>разделяемую библиотеку</firstterm>.<placeholder-1/>"

#: dfunc.xml:17(para)
msgid ""
"For information beyond what is contained in this section you should read the "
"documentation of your operating system, in particular the manual pages for "
"the C compiler, <command>cc</command>, and the link editor, <command>ld</"
"command>. In addition, the <productname>PostgreSQL</productname> source code "
"contains several working examples in the <filename>contrib</filename> "
"directory. If you rely on these examples you will make your modules "
"dependent on the availability of the <productname>PostgreSQL</productname> "
"source code, however."
msgstr ""
"За подробной информацией, дополняющей и поясняющей то, что описано в этом "
"разделе, вам следует обратиться к документации вашей операционной системы, в "
"частности, к страницам руководства компилятора C, <command>cc</command>, и "
"компоновщика, <command>ld</command>. Кроме того, ряд рабочих примеров можно "
"найти в каталоге <filename>contrib</filename> исходного кода "
"<productname>PostgreSQL</productname>. Однако, если вы непосредственно "
"воспользуйтесь этими примерами, ваши модули окажутся зависимыми от наличия "
"исходного кода <productname>PostgreSQL</productname>."

#: dfunc.xml:34(indexterm)
msgid "<primary>PIC</primary>"
msgstr "<primary>PIC</primary>"

#: dfunc.xml:29(para)
msgid ""
"Creating shared libraries is generally analogous to linking executables: "
"first the source files are compiled into object files, then the object files "
"are linked together. The object files need to be created as "
"<firstterm>position-independent code</firstterm> (<acronym>PIC</acronym>),"
"<placeholder-1/> which conceptually means that they can be placed at an "
"arbitrary location in memory when they are loaded by the executable. (Object "
"files intended for executables are usually not compiled that way.) The "
"command to link a shared library contains special flags to distinguish it "
"from linking an executable (at least in theory &mdash; on some systems the "
"practice is much uglier)."
msgstr ""
"Создание разделяемых библиотек в принципе не отличается от сборки "
"исполняемых файлов: сначала исходные файлы компилируются в объектные, а "
"затем объектные связываются вместе. Объектные файлы должны создаваться так, "
"чтобы они содержали <firstterm>позиционно-независимый</firstterm> код "
"(<acronym>PIC</acronym>, position-independent code)<placeholder-1/>, что "
"означает, что при загрузке для выполнения этот код может быть помещён в "
"любое место в памяти. (Объектные файлы, предназначенные для сборки "
"непосредственно исполняемых файлов, обычно собираются не так.) Команда для "
"компоновки разделяемой библиотеки принимает специальные флаги, что отличают "
"её от компоновки исполняемого файла (по крайней мере в теории &mdash; в "
"некоторых системах реальность не так прекрасна)."

#: dfunc.xml:43(para)
msgid ""
"In the following examples we assume that your source code is in a file "
"<filename>foo.c</filename> and we will create a shared library <filename>foo."
"so</filename>. The intermediate object file will be called <filename>foo.o</"
"filename> unless otherwise noted. A shared library can contain more than one "
"object file, but we only use one here."
msgstr ""
"В следующих примерах предполагается, что исходный код находится в файле "
"<filename>foo.c</filename> и мы будем создавать разделяемую библиотеку "
"<filename>foo.so</filename>. Промежуточный объектный файл будет называться "
"<filename>foo.o</filename>, если не отмечено другое. Разделяемая библиотека "
"может включать больше одного объектного файла, но здесь мы ограничимся одним."

#: dfunc.xml:61(systemitem)
msgid "FreeBSD"
msgstr "FreeBSD"

#: dfunc.xml:62(indexterm)
msgid "<primary>FreeBSD</primary><secondary>shared library</secondary>"
msgstr ""
"<primary>FreeBSD</primary> <secondary>разделяемая библиотека</secondary>"

#: dfunc.xml:69(programlisting) dfunc.xml:155(programlisting)
#, no-wrap
msgid ""
"gcc -fPIC -c foo.c\n"
"gcc -shared -o foo.so foo.o"
msgstr ""
"gcc -fPIC -c foo.c\n"
"gcc -shared -o foo.so foo.o"

#: dfunc.xml:65(para)
msgid ""
"The compiler flag to create <acronym>PIC</acronym> is <option>-fPIC</"
"option>. To create shared libraries the compiler flag is <option>-shared</"
"option>. <placeholder-1/> This is applicable as of version 3.0 of "
"<systemitem class=\"osname\">FreeBSD</systemitem>."
msgstr ""
"Для создания кода <acronym>PIC</acronym> компилятору передаётся флаг "
"<option>-fPIC</option>. Чтобы создать разделяемую библиотеку, используется "
"флаг компилятора <option>-shared</option>. <placeholder-1/> Это применимо "
"как минимум к <systemitem class=\"osname\">FreeBSD</systemitem> версии 3.0."

#: dfunc.xml:81(systemitem)
msgid "HP-UX"
msgstr "HP-UX"

#: dfunc.xml:82(indexterm)
msgid "<primary>HP-UX</primary><secondary>shared library</secondary>"
msgstr "<primary>HP-UX</primary> <secondary>разделяемая библиотека</secondary>"

#: dfunc.xml:90(programlisting)
#, no-wrap
msgid "cc +z -c foo.c"
msgstr "cc +z -c foo.c"

#: dfunc.xml:94(programlisting)
#, no-wrap
msgid "gcc -fPIC -c foo.c"
msgstr "gcc -fPIC -c foo.c"

#: dfunc.xml:98(programlisting)
#, no-wrap
msgid "ld -b -o foo.sl foo.o"
msgstr "ld -b -o foo.sl foo.o"

#: dfunc.xml:85(para)
msgid ""
"The compiler flag of the system compiler to create <acronym>PIC</acronym> is "
"<option>+z</option>. When using <application>GCC</application> it's <option>-"
"fPIC</option>. The linker flag for shared libraries is <option>-b</option>. "
"So: <placeholder-1/> or: <placeholder-2/> and then: <placeholder-3/> "
"<systemitem class=\"osname\">HP-UX</systemitem> uses the extension "
"<filename>.sl</filename> for shared libraries, unlike most other systems."
msgstr ""
"Для создания кода <acronym>PIC</acronym> системному компилятору передаётся "
"флаг <option>+z</option>, а компилятору <application>GCC</application> — "
"флаг <option>-fPIC</option>. Чтобы создать разделяемые библиотеки, "
"используется флаг компоновщика <option>-b</option>. Таким образом, нужно "
"выполнить: <placeholder-1/> или: <placeholder-2/> а затем: <placeholder-3/> "
"В <systemitem class=\"osname\">HP-UX</systemitem>, в отличие от многих "
"других систем, для разделяемых библиотек выбрано расширение <filename>.sl</"
"filename>."

#: dfunc.xml:110(systemitem)
msgid "Linux"
msgstr "Linux"

#: dfunc.xml:111(indexterm)
msgid "<primary>Linux</primary><secondary>shared library</secondary>"
msgstr "<primary>Linux</primary> <secondary>разделяемая библиотека</secondary>"

#: dfunc.xml:119(programlisting)
#, no-wrap
msgid ""
"cc -fPIC -c foo.c\n"
"cc -shared -o foo.so foo.o"
msgstr ""
"cc -fPIC -c foo.c\n"
"cc -shared -o foo.so foo.o"

#: dfunc.xml:114(para)
msgid ""
"The compiler flag to create <acronym>PIC</acronym> is <option>-fPIC</"
"option>. The compiler flag to create a shared library is <option>-shared</"
"option>. A complete example looks like this: <placeholder-1/>"
msgstr ""
"Для создания кода <acronym>PIC</acronym> компилятору передаётся флаг "
"<option>-fPIC</option>. Для создания разделяемой библиотеки компилятору "
"передаётся флаг <option>-shared</option>. Полный пример будет выглядеть так: "
"<placeholder-1/>"

#: dfunc.xml:129(systemitem)
msgid "OS X"
msgstr "OS X"

#: dfunc.xml:130(indexterm)
msgid "<primary>OS X</primary><secondary>shared library</secondary>"
msgstr "<primary>OS X</primary> <secondary>разделяемая библиотека</secondary>"

#: dfunc.xml:135(programlisting)
#, no-wrap
msgid ""
"cc -c foo.c\n"
"cc -bundle -flat_namespace -undefined suppress -o foo.so foo.o"
msgstr ""
"cc -c foo.c\n"
"cc -bundle -flat_namespace -undefined suppress -o foo.so foo.o"

#: dfunc.xml:133(para)
msgid ""
"Here is an example. It assumes the developer tools are installed. "
"<placeholder-1/>"
msgstr ""
"Следующий пример показывает нужные команды, в предположении, что установлены "
"инструменты разработчика. <placeholder-1/>"

#: dfunc.xml:145(systemitem)
msgid "NetBSD"
msgstr "NetBSD"

#: dfunc.xml:146(indexterm)
msgid "<primary>NetBSD</primary><secondary>shared library</secondary>"
msgstr ""
"<primary>NetBSD</primary> <secondary>разделяемая библиотека</secondary>"

#: dfunc.xml:149(para)
msgid ""
"The compiler flag to create <acronym>PIC</acronym> is <option>-fPIC</"
"option>. For <acronym>ELF</acronym> systems, the compiler with the flag "
"<option>-shared</option> is used to link shared libraries. On the older non-"
"ELF systems, <literal>ld -Bshareable</literal> is used. <placeholder-1/>"
msgstr ""
"Для создания кода <acronym>PIC</acronym> компилятору передаётся флаг "
"<option>-fPIC</option>. Для компоновки разделяемых библиотек в системах "
"<acronym>ELF</acronym> компилятору передаётся флаг <option>-shared</option>, "
"а в старых системах, не поддерживающих ELF, применяется команда <literal>ld -"
"Bshareable</literal>. <placeholder-1/>"

#: dfunc.xml:165(systemitem)
msgid "OpenBSD"
msgstr "OpenBSD"

#: dfunc.xml:166(indexterm)
msgid "<primary>OpenBSD</primary><secondary>shared library</secondary>"
msgstr ""
"<primary>OpenBSD</primary> <secondary>разделяемая библиотека</secondary>"

#: dfunc.xml:173(programlisting)
#, no-wrap
msgid ""
"gcc -fPIC -c foo.c\n"
"ld -Bshareable -o foo.so foo.o"
msgstr ""
"gcc -fPIC -c foo.c\n"
"ld -Bshareable -o foo.so foo.o"

#: dfunc.xml:169(para)
msgid ""
"The compiler flag to create <acronym>PIC</acronym> is <option>-fPIC</"
"option>. <literal>ld -Bshareable</literal> is used to link shared libraries. "
"<placeholder-1/>"
msgstr ""
"Для создания кода <acronym>PIC</acronym> компилятору передаётся флаг "
"<option>-fPIC</option>, а для компоновки разделяемых библиотек применяется "
"команда <literal moreinfo=\"none\">ld -Bshareable</literal>. <placeholder-1/>"

#: dfunc.xml:183(systemitem)
msgid "Solaris"
msgstr "Solaris"

#: dfunc.xml:184(indexterm)
msgid "<primary>Solaris</primary><secondary>shared library</secondary>"
msgstr ""
"<primary>Solaris</primary> <secondary>разделяемая библиотека</secondary>"

#: dfunc.xml:194(programlisting)
#, no-wrap
msgid ""
"cc -KPIC -c foo.c\n"
"cc -G -o foo.so foo.o"
msgstr ""
"cc -KPIC -c foo.c\n"
"cc -G -o foo.so foo.o"

#: dfunc.xml:199(programlisting)
#, no-wrap
msgid ""
"gcc -fPIC -c foo.c\n"
"gcc -G -o foo.so foo.o"
msgstr ""
"gcc -fPIC -c foo.c\n"
"gcc -G -o foo.so foo.o"

#: dfunc.xml:187(para)
msgid ""
"The compiler flag to create <acronym>PIC</acronym> is <option>-KPIC</option> "
"with the Sun compiler and <option>-fPIC</option> with <application>GCC</"
"application>. To link shared libraries, the compiler option is <option>-G</"
"option> with either compiler or alternatively <option>-shared</option> with "
"<application>GCC</application>. <placeholder-1/> or <placeholder-2/>"
msgstr ""
"Для создания кода <acronym>PIC</acronym> компилятору Sun передаётся флаг "
"<option>-KPIC</option>, а компилятору <application>GCC</application> — флаг "
"<option>-fPIC</option>. Для компоновки разделяемой библиотеки можно передать "
"обоим компиляторам флаг <option>-G</option> либо передать флаг <option>-"
"shared</option> компилятору <application>GCC</application>. <placeholder-1/> "
"или <placeholder-2/>"

#: dfunc.xml:209(systemitem)
msgid "UnixWare"
msgstr "UnixWare"

#: dfunc.xml:210(indexterm)
msgid "<primary>UnixWare</primary><secondary>shared library</secondary>"
msgstr ""
"<primary>UnixWare</primary> <secondary>разделяемая библиотека</secondary>"

#: dfunc.xml:220(programlisting)
#, no-wrap
msgid ""
"cc -K PIC -c foo.c\n"
"cc -G -o foo.so foo.o"
msgstr ""
"cc -K PIC -c foo.c\n"
"cc -G -o foo.so foo.o"

#: dfunc.xml:225(programlisting)
#, no-wrap
msgid ""
"gcc -fpic -c foo.c\n"
"gcc -shared -o foo.so foo.o"
msgstr ""
"gcc -fpic -c foo.c\n"
"gcc -shared -o foo.so foo.o"

#: dfunc.xml:213(para)
msgid ""
"The compiler flag to create <acronym>PIC</acronym> is <option>-K PIC</"
"option> with the SCO compiler and <option>-fpic</option> with "
"<productname>GCC</productname>. To link shared libraries, the compiler "
"option is <option>-G</option> with the SCO compiler and <option>-shared</"
"option> with <productname>GCC</productname>. <placeholder-1/> or "
"<placeholder-2/>"
msgstr ""
"Для создания кода <acronym>PIC</acronym> компилятору SCO передаётся флаг "
"<option>-K PIC</option>, а компилятору <productname>GCC</productname> — флаг "
"<option>-fpic</option>. Для компоновки разделяемой библиотеки нужно передать "
"параметр <option>-G</option> компилятору SCO или <option>-shared</option> "
"компилятору <productname>GCC</productname>. <placeholder-1/> или "
"<placeholder-2/>"

#: dfunc.xml:236(para)
msgid ""
"If this is too complicated for you, you should consider using <ulink url="
"\"http://www.gnu.org/software/libtool/\"><productname>GNU Libtool</"
"productname></ulink>, which hides the platform differences behind a uniform "
"interface."
msgstr ""
"Если это слишком сложно для вас, попробуйте использовать средство <ulink url="
"\"http://www.gnu.org/software/libtool/\"><productname>GNU Libtool</"
"productname></ulink>, которое скрывает различия платформ за единым "
"интерфейсом."

#: dfunc.xml:244(para)
msgid ""
"The resulting shared library file can then be loaded into "
"<productname>PostgreSQL</productname>. When specifying the file name to the "
"<command>CREATE FUNCTION</command> command, one must give it the name of the "
"shared library file, not the intermediate object file. Note that the "
"system's standard shared-library extension (usually <literal>.so</literal> "
"or <literal>.sl</literal>) can be omitted from the <command>CREATE FUNCTION</"
"command> command, and normally should be omitted for best portability."
msgstr ""
"Полученную разделяемую библиотеку можно будет затем загрузить в "
"<productname>PostgreSQL</productname>. Когда команде <command>CREATE "
"FUNCTION</command> передаётся имя файла, это должно быть имя файла "
"разделяемой библиотеки, а не промежуточного объектного файла. Заметьте, что "
"принятое в системе расширение файлов библиотек (как правило, <literal>.so</"
"literal> или <literal>.sl</literal>) в команде <command>CREATE FUNCTION</"
"command> можно опустить, и так обычно следует делать для лучшей "
"портируемости."

#: dfunc.xml:255(para)
msgid ""
"Refer back to <xref linkend=\"xfunc-c-dynload\"/> about where the server "
"expects to find the shared library files."
msgstr ""
"Чтобы уточнить, где сервер будет искать файлы разделяемых библиотек, "
"вернитесь к <xref remap=\"3\" linkend=\"xfunc-c-dynload\"/>."

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: dfunc.xml:0(None)
msgid "translator-credits"
msgstr "translator-credits"

#~ msgid ""
#~ "gcc -fpic -c foo.c\n"
#~ "gcc -G -o foo.so foo.o"
#~ msgstr ""
#~ "gcc -fpic -c foo.c\n"
#~ "gcc -G -o foo.so foo.o"
