# Alexander Lakhin <a.lakhin@postgrespro.ru>, 2012, 2013, 2015, 2016.
# Pavel Luzanov <p.luzanov@postgrespro.ru>, 2015, 2016.
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2016-08-19 11:31+0300\n"
"PO-Revision-Date: 2016-04-13 09:36+0300\n"
"Language-Team: Russian <pgsql-docs@lists.postgrespro.ru>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Lokalize 2.0\n"

#: chkpass.xml:5(title)
msgid "chkpass"
msgstr "chkpass"

#: chkpass.xml:7(indexterm)
msgid "<primary>chkpass</primary>"
msgstr "<primary>chkpass</primary>"

#: chkpass.xml:11(para)
msgid ""
"This module implements a data type <type>chkpass</type> that is designed for "
"storing encrypted passwords. Each password is automatically converted to "
"encrypted form upon entry, and is always stored encrypted. To compare, "
"simply compare against a clear text password and the comparison function "
"will encrypt it before comparing."
msgstr ""
"Этот модуль реализует тип данных <type>chkpass</type>, предназначенный для "
"хранения зашифрованных паролей. Каждый пароль автоматически преобразуется в "
"зашифрованный вид при вводе и всегда хранится зашифрованным. Для проверки "
"пароля его нужно сравнить с паролем в открытом виде, который будет также "
"зашифрован перед сравнением."

#: chkpass.xml:19(para)
msgid ""
"There are provisions in the code to report an error if the password is "
"determined to be easily crackable. However, this is currently just a stub "
"that does nothing."
msgstr ""
"В коде предусмотрена возможность выдавать ошибку, если вводимый пароль "
"оказывается слишком простым. Однако в настоящее время это просто заглушка, "
"которая ничего не делает."

#: chkpass.xml:25(para)
msgid ""
"If you precede an input string with a colon, it is assumed to be an already-"
"encrypted password, and is stored without further encryption. This allows "
"entry of previously-encrypted passwords."
msgstr ""
"Если вводимая строка начинается с двоеточия, предполагается, что это уже "
"зашифрованный пароль и он сохраняется без дополнительного шифрования. Это "
"позволяет сохранять ранее зашифрованные пароли."

#: chkpass.xml:31(para)
msgid ""
"On output, a colon is prepended. This makes it possible to dump and reload "
"passwords without re-encrypting them. If you want the encrypted password "
"without the colon then use the <function>raw()</function> function. This "
"allows you to use the type with things like Apache's "
"<literal>Auth_PostgreSQL</literal> module."
msgstr ""
"Выводимая строка этого типа предваряется двоеточием. Это позволяет выгружать "
"и заново загружать пароли, не расшифровывая их. Если вы хотите получить "
"строку зашифрованного пароля без двоеточия, можно использовать функцию "
"<function>raw()</function>. Благодаря этому, данный тип можно применять, "
"например, с модулем <literal>Auth_PostgreSQL</literal> для Apache."

#: chkpass.xml:39(para)
msgid ""
"The encryption uses the standard Unix function <function>crypt()</function>, "
"and so it suffers from all the usual limitations of that function; notably "
"that only the first eight characters of a password are considered."
msgstr ""
"Для шифрования используется стандартная функция Unix <function>crypt()</"
"function>, так что на данную реализацию распространяются все обычные "
"ограничения этой функции; в частности, учитываются только первые восемь "
"символов пароля."

#: chkpass.xml:46(para)
msgid "Note that the <type>chkpass</type> data type is not indexable."
msgstr ""
"Заметьте, что тип данных <type>chkpass</type> не является индексируемым."

#: chkpass.xml:54(para)
msgid "Sample usage:"
msgstr "Пример использования:"

#: chkpass.xml:58(programlisting)
#, no-wrap
msgid ""
"test=# create table test (p chkpass);\n"
"CREATE TABLE\n"
"test=# insert into test values ('hello');\n"
"INSERT 0 1\n"
"test=# select * from test;\n"
"       p\n"
"----------------\n"
" :dVGkpXdOrE3ko\n"
"(1 row)\n"
"\n"
"test=# select raw(p) from test;\n"
"      raw\n"
"---------------\n"
" dVGkpXdOrE3ko\n"
"(1 row)\n"
"\n"
"test=# select p = 'hello' from test;\n"
" ?column?\n"
"----------\n"
" t\n"
"(1 row)\n"
"\n"
"test=# select p = 'goodbye' from test;\n"
" ?column?\n"
"----------\n"
" f\n"
"(1 row)"
msgstr ""
"test=# create table test (p chkpass);\n"
"CREATE TABLE\n"
"test=# insert into test values ('hello');\n"
"INSERT 0 1\n"
"test=# select * from test;\n"
"       p\n"
"----------------\n"
" :dVGkpXdOrE3ko\n"
"(1 row)\n"
"\n"
"test=# select raw(p) from test;\n"
"      raw\n"
"---------------\n"
" dVGkpXdOrE3ko\n"
"(1 row)\n"
"\n"
"test=# select p = 'hello' from test;\n"
" ?column?\n"
"----------\n"
" t\n"
"(1 row)\n"
"\n"
"test=# select p = 'goodbye' from test;\n"
" ?column?\n"
"----------\n"
" f\n"
"(1 row)"

#: chkpass.xml:89(title)
msgid "Author"
msgstr "Автор"

#: chkpass.xml:91(para)
msgid "D'Arcy J.M. Cain (<email>darcy@druid.net</email>)"
msgstr "Д'Арси Дж. М. Каин (<email>darcy@druid.net</email>)"

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: chkpass.xml:0(None)
msgid "translator-credits"
msgstr "translator-credits"
