# Alexander Lakhin <a.lakhin@postgrespro.ru>, 2012, 2013, 2015, 2016.
# Pavel Luzanov <p.luzanov@postgrespro.ru>, 2015, 2016.
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2016-08-19 11:33+0300\n"
"PO-Revision-Date: 2016-04-13 09:36+0300\n"
"Language-Team: Russian <pgsql-docs@lists.postgrespro.ru>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Lokalize 2.0\n"

#: ref/prepare.xml:8(indexterm)
msgid "<primary>PREPARE</primary>"
msgstr "<primary>PREPARE</primary>"

#: ref/prepare.xml:12(indexterm)
msgid "<primary>prepared statements</primary> <secondary>creating</secondary>"
msgstr ""
"<primary>подготовленные операторы</primary> <secondary>создание</secondary>"

#: ref/prepare.xml:18(refentrytitle)
msgctxt "refentrytitle"
msgid "PREPARE"
msgstr "PREPARE"

#: ref/prepare.xml:19(manvolnum)
msgid "7"
msgstr "7"

#: ref/prepare.xml:20(refmiscinfo)
msgid "SQL - Language Statements"
msgstr "Операторы языка SQL"

#: ref/prepare.xml:24(refname)
msgctxt "refname"
msgid "PREPARE"
msgstr "PREPARE"

#: ref/prepare.xml:25(refpurpose)
msgid "prepare a statement for execution"
msgstr "подготовить оператор к выполнению"

#: ref/prepare.xml:30(replaceable) ref/prepare.xml:90(replaceable)
msgid "name"
msgstr "имя"

#: ref/prepare.xml:30(replaceable) ref/prepare.xml:102(replaceable)
msgid "data_type"
msgstr "тип_данных"

#: ref/prepare.xml:30(replaceable) ref/prepare.xml:116(replaceable)
msgid "statement"
msgstr "оператор"

#: ref/prepare.xml:29(synopsis)
#, no-wrap
msgid "PREPARE <placeholder-1/> [ ( <placeholder-2/> [, ...] ) ] AS <placeholder-3/>"
msgstr "PREPARE <placeholder-1/> [ ( <placeholder-2/> [, ...] ) ] AS <placeholder-3/>"

#: ref/prepare.xml:35(title)
msgid "Description"
msgstr "Описание"

#: ref/prepare.xml:37(para)
msgid ""
"<command>PREPARE</command> creates a prepared statement. A prepared "
"statement is a server-side object that can be used to optimize performance. "
"When the <command>PREPARE</command> statement is executed, the specified "
"statement is parsed, analyzed, and rewritten. When an <command>EXECUTE</"
"command> command is subsequently issued, the prepared statement is planned "
"and executed. This division of labor avoids repetitive parse analysis work, "
"while allowing the execution plan to depend on the specific parameter values "
"supplied."
msgstr ""
"<command>PREPARE</command> создаёт подготовленный оператор. Подготовленный "
"оператор представляет собой объект на стороне сервера, позволяющий "
"оптимизировать производительность приложений. Когда выполняется "
"<command>PREPARE</command>, указанный оператор разбирается, анализируется и "
"переписывается. При последующем выполнении команды <command>EXECUTE</"
"command> подготовленный оператор планируется и исполняется. Такое разделение "
"труда исключает повторный разбор запроса, при этом позволяет выбрать "
"наилучший план выполнения в зависимости от определённых значений параметров."

#: ref/prepare.xml:48(para)
msgid ""
"Prepared statements can take parameters: values that are substituted into "
"the statement when it is executed. When creating the prepared statement, "
"refer to parameters by position, using <literal>$1</literal>, <literal>$2</"
"literal>, etc. A corresponding list of parameter data types can optionally "
"be specified. When a parameter's data type is not specified or is declared "
"as <literal>unknown</literal>, the type is inferred from the context in "
"which the parameter is used (if possible). When executing the statement, "
"specify the actual values for these parameters in the <command>EXECUTE</"
"command> statement. Refer to <xref linkend=\"sql-execute\"/> for more "
"information about that."
msgstr ""
"Подготовленные операторы могут принимать параметры — значения, которые "
"подставляются в оператор, когда он собственно выполняется. При создании "
"подготовленного оператора к этим параметрам можно обращаться по порядковому "
"номеру, используя запись <literal>$1</literal>, <literal>$2</literal> и т. "
"д. Дополнительно можно указать список соответствующих типов данных "
"параметров. Если тип данных параметра не указан или объявлен как "
"<literal>unknown</literal> (неизвестный), тип выводится из контекста, в "
"котором используется этот параметр (если это возможно). При выполнении "
"оператора фактические значения параметров передаются команде "
"<command>EXECUTE</command>. За подробностями обратитесь к <xref remap=\"3\" "
"linkend=\"sql-execute\"/>."

#: ref/prepare.xml:63(para)
msgid ""
"Prepared statements only last for the duration of the current database "
"session. When the session ends, the prepared statement is forgotten, so it "
"must be recreated before being used again. This also means that a single "
"prepared statement cannot be used by multiple simultaneous database clients; "
"however, each client can create their own prepared statement to use. "
"Prepared statements can be manually cleaned up using the <xref linkend=\"sql-"
"deallocate\"/> command."
msgstr ""
"Подготовленные операторы существуют только в рамках текущего сеанса работы с "
"БД. Когда сеанс завершается, система забывает подготовленный оператор, так "
"что его надо будет создать снова, чтобы использовать дальше. Это также "
"означает, что один подготовленный оператор не может использоваться "
"одновременно несколькими клиентами базы данных; но каждый клиент может "
"создать собственный подготовленный оператор и использовать его. Освободить "
"подготовленный оператор можно вручную, выполнив команду <xref linkend=\"sql-"
"deallocate\"/>."

#: ref/prepare.xml:73(para)
msgid ""
"Prepared statements potentially have the largest performance advantage when "
"a single session is being used to execute a large number of similar "
"statements. The performance difference will be particularly significant if "
"the statements are complex to plan or rewrite, e.g. if the query involves a "
"join of many tables or requires the application of several rules. If the "
"statement is relatively simple to plan and rewrite but relatively expensive "
"to execute, the performance advantage of prepared statements will be less "
"noticeable."
msgstr ""
"Подготовленные операторы потенциально дают наибольший выигрыш в "
"производительности, когда в одном сеансе выполняется большое число "
"однотипных операторов. Отличие в производительности особенно значительно, "
"если операторы достаточно сложны для планирования или перезаписи, например, "
"когда в запросе объединяется множество таблиц или необходимо применить "
"несколько правил. Если оператор относительно прост в этом плане, но сложен "
"для выполнения, выигрыш от использования подготовленных операторов будет "
"менее заметным."

#: ref/prepare.xml:86(title)
msgid "Parameters"
msgstr "Параметры"

#: ref/prepare.xml:92(para)
msgid ""
"An arbitrary name given to this particular prepared statement. It must be "
"unique within a single session and is subsequently used to execute or "
"deallocate a previously prepared statement."
msgstr ""
"Произвольное имя, назначаемое данному подготовленному оператору. Оно должно "
"быть уникальным в рамках одного сеанса; это имя затем используется для "
"выполнения или освобождения ранее подготовленного оператора."

#: ref/prepare.xml:104(para)
msgid ""
"The data type of a parameter to the prepared statement. If the data type of "
"a particular parameter is unspecified or is specified as <literal>unknown</"
"literal>, it will be inferred from the context in which the parameter is "
"used. To refer to the parameters in the prepared statement itself, use "
"<literal>$1</literal>, <literal>$2</literal>, etc."
msgstr ""
"Тип данных параметра подготовленного оператора. Если тип данных конкретного "
"параметра не задан или задан как <literal>unknown</literal>, он будет "
"выводиться из контекста, в котором используется параметр. Для обращения к "
"параметрам в самом подготовленном операторе используется запись <literal>$1</"
"literal>, <literal>$2</literal> и т. д."

#: ref/prepare.xml:118(para)
msgid ""
"Any <command>SELECT</command>, <command>INSERT</command>, <command>UPDATE</"
"command>, <command>DELETE</command>, or <command>VALUES</command> statement."
msgstr ""
"Любой оператор <command>SELECT</command>, <command>INSERT</command>, "
"<command>UPDATE</command>, <command>DELETE</command> или <command>VALUES</"
"command>."

#: ref/prepare.xml:128(title)
msgid "Notes"
msgstr "Замечания"

#: ref/prepare.xml:130(para)
msgid ""
"Prepared statements can use generic plans rather than re-planning with each "
"set of supplied <command>EXECUTE</command> values. This occurs immediately "
"for prepared statements with no parameters; otherwise it occurs only after "
"five or more executions produce plans whose estimated cost average "
"(including planning overhead) is more expensive than the generic plan cost "
"estimate. Once a generic plan is chosen, it is used for the remaining "
"lifetime of the prepared statement. Using <command>EXECUTE</command> values "
"which are rare in columns with many duplicates can generate custom plans "
"that are so much cheaper than the generic plan, even after adding planning "
"overhead, that the generic plan might never be used."
msgstr ""
"Подготовленные операторы могут использовать общие планы, а не перестраивать "
"план для каждого набора переданных значений <command>EXECUTE</command>. Для "
"подготовленных операторов без параметров это происходит сразу; иначе общий "
"план выбирается после пяти и более выполнений, при которых получаются планы "
"с ожидаемой средней стоимостью (включая издержки планирования), превышающей "
"оценку стоимости общего плана. Когда общий план выбран, он будет "
"использоваться до конца жизни подготовленного оператора. При использовании "
"значений <command>EXECUTE</command>, которые редко встречаются в столбцах со "
"множеством дублирующихся значений, могут быть построены специализированные "
"планы настолько выгоднее общего плана, что даже с издержками планирования "
"общий план может не использоваться никогда."

#: ref/prepare.xml:144(para)
msgid ""
"A generic plan assumes that each value supplied to <command>EXECUTE</"
"command> is one of the column's distinct values and that column values are "
"uniformly distributed. For example, if statistics record three distinct "
"column values, a generic plan assumes a column equality comparison will "
"match 33% of processed rows. Column statistics also allow generic plans to "
"accurately compute the selectivity of unique columns. Comparisons on non-"
"uniformly-distributed columns and specification of non-existent values "
"affects the average plan cost, and hence if and when a generic plan is "
"chosen."
msgstr ""
"Для общего плана предполагается, что значения, передаваемые в "
"<command>EXECUTE</command>, являются уникальными значениями в столбце и что "
"эти значения распределены равномерно. Например, если в статистике записаны "
"три различных значения столбца, с общим планом предполагается, что проверке "
"на равенство для столбца будут соответствовать 33% обработанных строк. "
"Статистика по столбцам также позволяет общим планам точно вычислять "
"избирательность для уникальных столбцов. Сравнения по столбцам с "
"неоднородным распределением и указания несуществующих значений влияют на "
"среднюю стоимость плана и следовательно, на то, будет ли выбран общий план и "
"когда."

#: ref/prepare.xml:156(para)
msgid ""
"To examine the query plan <productname>PostgreSQL</productname> is using for "
"a prepared statement, use <xref linkend=\"sql-explain\"/>, e.g. "
"<command>EXPLAIN EXECUTE</command>. If a generic plan is in use, it will "
"contain parameter symbols <literal>$<replaceable>n</replaceable></literal>, "
"while a custom plan will have the supplied parameter values substituted into "
"it. The row estimates in the generic plan reflect the selectivity computed "
"for the parameters."
msgstr ""
"Чтобы узнать, какой план выполнения выбирает <productname>PostgreSQL</"
"productname> для подготовленного оператора, воспользуйтесь <xref linkend="
"\"sql-explain\"/> (например, напишите <command>EXPLAIN EXECUTE</command>). "
"Если применяется общий план, он будет содержать символы параметров <literal>"
"$<replaceable>n</replaceable></literal>, тогда как в специализированном "
"плане будут подставлены фактические значения параметров. Оценки строк в "
"общем плане отражают избирательность, вычисленную для конкретных параметров."

#: ref/prepare.xml:167(para)
msgid ""
"For more information on query planning and the statistics collected by "
"<productname>PostgreSQL</productname> for that purpose, see the <xref "
"linkend=\"sql-analyze\"/> documentation."
msgstr ""
"Более подробно о планировании запросов и статистике, которую собирает "
"<productname>PostgreSQL</productname> для этих целей, можно узнать в "
"документации <xref linkend=\"sql-analyze\"/>."

#: ref/prepare.xml:174(para)
msgid ""
"Although the main point of a prepared statement is to avoid repeated parse "
"analysis and planning of the statement, <productname>PostgreSQL</"
"productname> will force re-analysis and re-planning of the statement before "
"using it whenever database objects used in the statement have undergone "
"definitional (DDL) changes since the previous use of the prepared statement. "
"Also, if the value of <xref linkend=\"guc-search-path\"/> changes from one "
"use to the next, the statement will be re-parsed using the new "
"<varname>search_path</varname>. (This latter behavior is new as of "
"<productname>PostgreSQL</productname> 9.3.) These rules make use of a "
"prepared statement semantically almost equivalent to re-submitting the same "
"query text over and over, but with a performance benefit if no object "
"definitions are changed, especially if the best plan remains the same across "
"uses. An example of a case where the semantic equivalence is not perfect is "
"that if the statement refers to a table by an unqualified name, and then a "
"new table of the same name is created in a schema appearing earlier in the "
"<varname>search_path</varname>, no automatic re-parse will occur since no "
"object used in the statement changed. However, if some other change forces a "
"re-parse, the new table will be referenced in subsequent uses."
msgstr ""
"Хотя основной смысл подготовленных операторов в том, чтобы избежать "
"многократного разбора и планирования оператора, <productname>PostgreSQL</"
"productname> будет принудительно заново анализировать и планировать "
"выполнение оператора всякий раз, когда объекты базы данных, задействованные "
"в операторе, подвергаются изменениям определения (DDL) со времени "
"предыдущего использования подготовленного оператора. Кроме того, если от "
"одного использования оператора к другому меняется значение <xref linkend="
"\"guc-search-path\"/>, оператор будет так же разобран заново с новым "
"<varname>search_path</varname>. (Последнее поведение появилось в "
"<productname>PostgreSQL</productname> 9.3.) С этими правилами использование "
"подготовленного оператора по сути почти не отличается от выполнения одного и "
"того же запроса снова и снова, но даёт выигрыш по скорости (если определения "
"объектов не меняются), особенно если оптимальный план от раза к разу не "
"меняется. Однако различия всё же могут проявиться — например, когда оператор "
"обращается к таблице по неполному имени, а затем в схеме, стоящей в пути "
"<varname>search_path</varname> раньше, создаётся другая таблица с таким же "
"именем, автоматический пересмотр запроса не происходит, так как никакой "
"объект в определении оператора не изменился. Однако, если автоматический "
"пересмотр произойдёт в результате других изменений, при последующем "
"выполнении запроса будет задействована новая таблица."

#: ref/prepare.xml:196(para)
msgid ""
"You can see all prepared statements available in the session by querying the "
"<link linkend=\"view-pg-prepared-statements"
"\"><structname>pg_prepared_statements</structname></link> system view."
msgstr ""
"Получить список всех доступных в сеансе подготовленных операторов можно, "
"обратившись к системному представлению <link linkend=\"view-pg-prepared-"
"statements\"><structname>pg_prepared_statements</structname></link>."

#: ref/prepare.xml:204(title)
msgid "Examples"
msgstr "Примеры"

#: ref/prepare.xml:208(programlisting)
#, no-wrap
msgid ""
"PREPARE fooplan (int, text, bool, numeric) AS\n"
"    INSERT INTO foo VALUES($1, $2, $3, $4);\n"
"EXECUTE fooplan(1, 'Hunter Valley', 't', 200.00);"
msgstr ""
"PREPARE fooplan (int, text, bool, numeric) AS\n"
"    INSERT INTO foo VALUES($1, $2, $3, $4);\n"
"EXECUTE fooplan(1, 'Hunter Valley', 't', 200.00);"

#: ref/prepare.xml:205(para)
msgid ""
"Create a prepared statement for an <command>INSERT</command> statement, and "
"then execute it: <placeholder-1/>"
msgstr ""
"Создание подготовленного оператора для команды <command>INSERT</command>, "
"который затем выполняется: <placeholder-1/>"

#: ref/prepare.xml:218(programlisting)
#, no-wrap
msgid ""
"PREPARE usrrptplan (int) AS\n"
"    SELECT * FROM users u, logs l WHERE u.usrid=$1 AND u.usrid=l.usrid\n"
"    AND l.date = $2;\n"
"EXECUTE usrrptplan(1, current_date);"
msgstr ""
"PREPARE usrrptplan (int) AS\n"
"    SELECT * FROM users u, logs l WHERE u.usrid=$1 AND u.usrid=l.usrid\n"
"    AND l.date = $2;\n"
"EXECUTE usrrptplan(1, current_date);"

#: ref/prepare.xml:215(para)
msgid ""
"Create a prepared statement for a <command>SELECT</command> statement, and "
"then execute it: <placeholder-1/> Note that the data type of the second "
"parameter is not specified, so it is inferred from the context in which "
"<literal>$2</literal> is used."
msgstr ""
"Создание подготовленного оператора для команды <command>SELECT</command>, "
"который затем выполняется: <placeholder-1/> Заметьте, что тип данных второго "
"параметра не указывается, так что он выводится из контекста, в котором "
"используется <literal>$2</literal>."

#: ref/prepare.xml:230(title)
msgid "Compatibility"
msgstr "Совместимость"

#: ref/prepare.xml:232(para)
msgid ""
"The SQL standard includes a <command>PREPARE</command> statement, but it is "
"only for use in embedded SQL. This version of the <command>PREPARE</command> "
"statement also uses a somewhat different syntax."
msgstr ""
"В стандарте SQL есть оператор <command>PREPARE</command>, но он предназначен "
"только для применения во встраиваемом SQL. Эта версия оператора "
"<command>PREPARE</command> имеет также несколько другой синтаксис."

#: ref/prepare.xml:241(title)
msgid "See Also"
msgstr "См. также"

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: ref/prepare.xml:0(None)
msgid "translator-credits"
msgstr "translator-credits"

#~ msgid ""
#~ "If a prepared statement is executed enough times, the server may "
#~ "eventually decide to save and re-use a generic plan rather than re-"
#~ "planning each time. This will occur immediately if the prepared statement "
#~ "has no parameters; otherwise it occurs only if the generic plan appears "
#~ "to be not much more expensive than a plan that depends on specific "
#~ "parameter values. Typically, a generic plan will be selected only if the "
#~ "query's performance is estimated to be fairly insensitive to the specific "
#~ "parameter values supplied."
#~ msgstr ""
#~ "Если подготовленный оператор выполняется много раз, сервер может в итоге "
#~ "решить сохранить и повторно использовать общий план, и не строить план "
#~ "каждый раз заново. Это происходит при первом же выполнении, если "
#~ "подготовленный оператор не имеет параметров; в противном случае, только "
#~ "если общий план окажется ненамного дороже, чем план, зависящий от "
#~ "конкретных значений. Обычно общий план выбирается, только если "
#~ "производительность запроса, предположительно, практически не зависит от "
#~ "передаваемых значений параметров."
