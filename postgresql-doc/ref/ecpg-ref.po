# Alexander Lakhin <a.lakhin@postgrespro.ru>, 2012, 2013, 2015, 2016.
# Pavel Luzanov <p.luzanov@postgrespro.ru>, 2015, 2016.
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2017-09-15 11:14+0300\n"
"PO-Revision-Date: 2016-04-13 09:36+0300\n"
"Language-Team: Russian <pgsql-docs@lists.postgrespro.ru>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Lokalize 2.0\n"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:8(indexterm)
msgid "<primary>ecpg</primary>"
msgstr "<primary>ecpg</primary>"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:13(application) ref/ecpg-ref.xml:19(application)
msgctxt "application"
msgid "ecpg"
msgstr "ecpg"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:14(manvolnum)
msgid "1"
msgstr "1"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:15(refmiscinfo)
msgid "Application"
msgstr "Приложение"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:20(refpurpose)
msgid "embedded SQL C preprocessor"
msgstr "встроенный C-препроцессор SQL"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:25(command)
msgctxt "command"
msgid "ecpg"
msgstr "ecpg"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:26(replaceable) ref/ecpg-ref.xml:134(replaceable)
msgid "option"
msgstr "параметр"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:27(replaceable)
msgid "file"
msgstr "файл"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:33(title)
msgid "Description"
msgstr "Описание"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:35(para)
msgid ""
"<command>ecpg</command> is the embedded SQL preprocessor for C programs. It "
"converts C programs with embedded SQL statements to normal C code by "
"replacing the SQL invocations with special function calls. The output files "
"can then be processed with any C compiler tool chain."
msgstr ""
"<command>ecpg</command> это встроенный SQL препроцессор для программ, "
"написанных на языке C. Он преобразует программы на C, содержащие SQL-"
"выражения, заменяя их вызовами встроенных функций. Получаемые на выходе "
"файлы можно затем скомпилировать и скомпоновать."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:43(para)
msgid ""
"<command>ecpg</command> will convert each input file given on the command "
"line to the corresponding C output file. Input files preferably have the "
"extension <filename>.pgc</filename>. The extension will be replaced by "
"<filename>.c</filename> to determine the output file name. The output file "
"name can also be overridden using the <option>-o</option> option."
msgstr ""
"<command>ecpg</command> преобразует каждый файл, переданный в параметрах, в "
"соответствующий файл на C. Входным файлам лучше давать расширения <filename>."
"pgc</filename>. Это расширение будет автоматически заменяться на <filename>."
"c</filename>. Имя выходного файла также можно задать в параметре <option>-o</"
"option>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:53(para)
msgid ""
"This reference page does not describe the embedded SQL language. See <xref "
"linkend=\"ecpg\"/> for more information on that topic."
msgstr ""
"Данный раздел не содержит описания встроенного SQL-языка. Для более "
"подробной информации см. <xref remap=\"4\" linkend=\"ecpg\"/>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:61(title)
msgid "Options"
msgstr "Параметры"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:69(option)
msgid "-c"
msgstr "-c"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:71(para)
msgid ""
"Automatically generate certain C code from SQL code. Currently, this works "
"for <literal>EXEC SQL TYPE</literal>."
msgstr ""
"Автоматически генерировать код, написанный на языке C, из кода SQL. Сейчас "
"это справедливо для <literal>EXEC SQL TYPE</literal>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:79(replaceable)
msgid "mode"
msgstr "режим"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:79(option)
msgid "-C <placeholder-1/>"
msgstr "-C <placeholder-1/>"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:81(para)
msgid ""
"Set a compatibility mode. <replaceable>mode</replaceable> can be "
"<literal>INFORMIX</literal> or <literal>INFORMIX_SE</literal>."
msgstr ""
"Установить режим совместимости. <replaceable>режим</replaceable> может "
"принимать значение <literal>INFORMIX</literal> или <literal>INFORMIX_SE</"
"literal>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:90(replaceable)
msgid "symbol"
msgstr "символ"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:90(option)
msgid "-D <placeholder-1/>"
msgstr "-D <placeholder-1/>"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:92(para)
msgid "Define a C preprocessor symbol."
msgstr "Определить символ начала команд C-препроцессора."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:99(option)
msgid "-i"
msgstr "-i"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:101(para)
msgid "Parse system include files as well."
msgstr "Также разбирать и системные включения."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:108(replaceable)
msgid "directory"
msgstr "каталог"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:108(option)
msgid "-I <placeholder-1/>"
msgstr "-I <placeholder-1/>"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:110(para)
msgid ""
"Specify an additional include path, used to find files included via "
"<literal>EXEC SQL INCLUDE</literal>. Defaults are <filename>.</filename> "
"(current directory), <filename>/usr/local/include</filename>, the "
"<productname>PostgreSQL</productname> include directory which is defined at "
"compile time (default: <filename>/usr/local/pgsql/include</filename>), and "
"<filename>/usr/include</filename>, in that order."
msgstr ""
"Указать дополнительный путь включаемых файлов, используемый при выполнении "
"<literal>EXEC SQL INCLUDE</literal>. По умолчанию используются <filename>.</"
"filename> (текущий каталог), <filename>/usr/local/include</filename>, "
"каталог, задаваемый при компиляции <productname>PostgreSQL</productname> "
"(обычно — <filename>/usr/local/pgsql/include</filename>), и <filename>/usr/"
"include</filename>, в порядке, как это перечислено."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:124(replaceable)
msgid "filename"
msgstr "имя_файла"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:124(option)
msgid "-o <placeholder-1/>"
msgstr "-o <placeholder-1/>"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:126(para)
msgid ""
"Specifies that <command>ecpg</command> should write all its output to the "
"given <replaceable>filename</replaceable>."
msgstr ""
"Указывает <command>ecpg</command> <replaceable>имя файла</replaceable>, в "
"который будет осуществлен вывод."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:134(option)
msgid "-r <placeholder-1/>"
msgstr "-r <placeholder-1/>"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:141(option)
msgid "no_indicator"
msgstr "no_indicator"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:143(para)
msgid ""
"Do not use indicators but instead use special values to represent null "
"values. Historically there have been databases using this approach."
msgstr ""
"Использовать специальные символы для представления значений null. "
"Исторически некоторые базы данных используют такой подход."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:150(option)
msgid "prepare"
msgstr "prepare"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:152(para)
msgid ""
"Prepare all statements before using them. Libecpg will keep a cache of "
"prepared statements and reuse a statement if it gets executed again. If the "
"cache runs full, libecpg will free the least used statement."
msgstr ""
"Сформировать подготовленные выражения. libecpg сформирует кеш подготовленных "
"выражений и будет использовать их при необходимости повторно. В случае "
"переполнения кеша, libecpg освободит память за счёт вытеснения наименее "
"используемых выражений."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:160(option)
msgid "questionmarks"
msgstr "questionmarks"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:162(para)
msgid ""
"Allow question mark as placeholder for compatibility reasons. This used to "
"be the default long ago."
msgstr ""
"Разрешает использовать знак вопроса в качестве аргумента подстановки в целях "
"совместимости. Ранее это было поведением по умолчанию."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:136(para)
msgid ""
"Selects run-time behavior. <replaceable>Option</replaceable> can be one of "
"the following: <placeholder-1/>"
msgstr ""
"Определяет поведение времени исполнения. <replaceable>Флаг</replaceable> "
"может принимать следующие значения: <placeholder-1/>"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:173(option)
msgid "-t"
msgstr "-t"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:175(para)
msgid ""
"Turn on autocommit of transactions. In this mode, each SQL command is "
"automatically committed unless it is inside an explicit transaction block. "
"In the default mode, commands are committed only when <command>EXEC SQL "
"COMMIT</command> is issued."
msgstr ""
"Включить автоматическую фиксацию транзакций. В этом режиме каждая SQL-"
"команда будет автоматически фиксироваться, пока не будет явно включена в "
"блок транзакции. В режиме по умолчанию команды фиксируются лишь при явном "
"вызове <command>EXEC SQL COMMIT</command>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:185(option)
msgid "-v"
msgstr "-v"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:187(para)
msgid ""
"Print additional information including the version and the \"include\" path."
msgstr "Вывести информацию о версии, а также путях поиска включаемых файлов."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:195(option)
msgid "--version"
msgstr "--version"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:197(para)
msgid "Print the <application>ecpg</application> version and exit."
msgstr "Вывести версию <application>ecpg</application>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:204(option)
msgid "-?"
msgstr "-?"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:205(option)
msgid "--help"
msgstr "--help"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:207(para)
msgid ""
"Show help about <application>ecpg</application> command line arguments, and "
"exit."
msgstr "Вывести справку по команде <application>ecpg</application>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:63(para)
msgid ""
"<command>ecpg</command> accepts the following command-line arguments: "
"<placeholder-1/>"
msgstr ""
"<command>ecpg</command> принимает в качестве аргументов: <placeholder-1/>"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:220(title)
msgid "Notes"
msgstr "Замечания"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:222(para)
msgid ""
"When compiling the preprocessed C code files, the compiler needs to be able "
"to find the <application>ECPG</application> header files in the "
"<productname>PostgreSQL</productname> include directory. Therefore, you "
"might have to use the <option>-I</option> option when invoking the compiler "
"(e.g., <literal>-I/usr/local/pgsql/include</literal>)."
msgstr ""
"При компиляции полученных файлов, компилятор должен иметь возможность найти "
"заголовочные файлы <application>ECPG</application> в каталоге включений "
"<productname>PostgreSQL</productname>. Для этого можно использовать флаг "
"<option>-I</option> во время компиляции, например, <literal>-I/usr/local/"
"pgsql/include</literal>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:230(para)
msgid ""
"Programs using C code with embedded SQL have to be linked against the "
"<filename>libecpg</filename> library, for example using the linker options "
"<literal>-L/usr/local/pgsql/lib -lecpg</literal>."
msgstr ""
"Программы на C со встроенным SQL необходимо скомпоновать с библиотекой "
"<filename>libecpg</filename>, например, используя флаг компоновщика "
"<literal>-L/usr/local/pgsql/lib -lecpg</literal>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:236(para)
msgid ""
"The value of either of these directories that is appropriate for the "
"installation can be found out using <xref linkend=\"app-pgconfig\"/>."
msgstr ""
"Имена каталогов, подходящих для установки, можно найти в разделе <xref "
"linkend=\"app-pgconfig\"/>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:245(title)
msgid "Examples"
msgstr "Примеры"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:251(programlisting)
#, no-wrap
msgid ""
"ecpg prog1.pgc\n"
"cc -I/usr/local/pgsql/include -c prog1.c\n"
"cc -o prog1 prog1.o -L/usr/local/pgsql/lib -lecpg"
msgstr ""
"ecpg prog1.pgc\n"
"cc -I/usr/local/pgsql/include -c prog1.c\n"
"cc -o prog1 prog1.o -L/usr/local/pgsql/lib -lecpg"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:247(para)
msgid ""
"If you have an embedded SQL C source file named <filename>prog1.pgc</"
"filename>, you can create an executable program using the following sequence "
"of commands: <placeholder-1/>"
msgstr ""
"Если имеется исходный файл на C <filename>prog1.pgc</filename> со встроенным "
"SQL, можно создать исполняемую программу, используя следующую "
"последовательность команд: <placeholder-1/>"

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#. +> REL_10 REL9_6_3 REL9_6
#: ref/ecpg-ref.xml:0(None)
msgid "translator-credits"
msgstr "translator-credits"
