# Alexander Lakhin <a.lakhin@postgrespro.ru>, 2012, 2013, 2015, 2016.
# Pavel Luzanov <p.luzanov@postgrespro.ru>, 2015, 2016.
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2016-08-19 11:33+0300\n"
"PO-Revision-Date: 2016-04-13 09:36+0300\n"
"Language-Team: Russian <pgsql-docs@lists.postgrespro.ru>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Lokalize 2.0\n"

#: ref/listen.xml:8(indexterm)
msgid "<primary>LISTEN</primary>"
msgstr "<primary>LISTEN</primary>"

#: ref/listen.xml:13(refentrytitle)
msgctxt "refentrytitle"
msgid "LISTEN"
msgstr "LISTEN"

#: ref/listen.xml:14(manvolnum)
msgid "7"
msgstr "7"

#: ref/listen.xml:15(refmiscinfo)
msgid "SQL - Language Statements"
msgstr "Операторы языка SQL"

#: ref/listen.xml:19(refname)
msgctxt "refname"
msgid "LISTEN"
msgstr "LISTEN"

#: ref/listen.xml:20(refpurpose)
msgid "listen for a notification"
msgstr "ожидать уведомления"

#: ref/listen.xml:25(replaceable) ref/listen.xml:81(replaceable)
msgid "channel"
msgstr "канал"

#: ref/listen.xml:24(synopsis)
#, no-wrap
msgid "LISTEN <placeholder-1/>"
msgstr "LISTEN <placeholder-1/>"

#: ref/listen.xml:30(title)
msgid "Description"
msgstr "Описание"

#: ref/listen.xml:32(para)
msgid ""
"<command>LISTEN</command> registers the current session as a listener on the "
"notification channel named <replaceable class=\"parameter\">channel</"
"replaceable>. If the current session is already registered as a listener for "
"this notification channel, nothing is done."
msgstr ""
"<command>LISTEN</command> регистрирует текущий сеанс для получения "
"уведомления через канал с заданным именем (<replaceable class=\"parameter"
"\">канал</replaceable>). Если текущий сеанс уже зарегистрирован и ожидает "
"уведомления через этот канал, ничего не происходит."

#: ref/listen.xml:40(para)
msgid ""
"Whenever the command <command>NOTIFY <replaceable class=\"parameter"
"\">channel</replaceable></command> is invoked, either by this session or "
"another one connected to the same database, all the sessions currently "
"listening on that notification channel are notified, and each will in turn "
"notify its connected client application."
msgstr ""
"Когда вызывается команда <command>NOTIFY <replaceable class=\"parameter"
"\">канал</replaceable></command> (в текущем или другом сеансе, подключённом "
"к той же базе данных), все сеансы, ожидающие уведомления через заданный "
"канал, получают уведомление и каждый, в свою очередь, передаёт его "
"подключённому клиентскому приложению."

#: ref/listen.xml:49(para)
msgid ""
"A session can be unregistered for a given notification channel with the "
"<command>UNLISTEN</command> command. A session's listen registrations are "
"automatically cleared when the session ends."
msgstr ""
"Сеанс может отказаться от получения уведомлений через определённый канал с "
"помощью команды <command>UNLISTEN</command>. Кроме того, подписка на любые "
"уведомления автоматически отменяется при завершении сеанса."

#: ref/listen.xml:55(para)
msgid ""
"The method a client application must use to detect notification events "
"depends on which <productname>PostgreSQL</productname> application "
"programming interface it uses. With the <application>libpq</application> "
"library, the application issues <command>LISTEN</command> as an ordinary SQL "
"command, and then must periodically call the function <function>PQnotifies</"
"function> to find out whether any notification events have been received. "
"Other interfaces such as <application>libpgtcl</application> provide higher-"
"level methods for handling notify events; indeed, with "
"<application>libpgtcl</application> the application programmer should not "
"even issue <command>LISTEN</command> or <command>UNLISTEN</command> "
"directly. See the documentation for the interface you are using for more "
"details."
msgstr ""
"Способ получения уведомлений клиентским приложением определяется программным "
"интерфейсом <productname>PostgreSQL</productname>, который оно использует. "
"Приложение, использующее библиотеку <application>libpq</application>, "
"выполняет команду <command>LISTEN</command> как обычную команду SQL, а затем "
"оно должно периодически вызывать функцию <function>PQnotifies</function>, "
"чтобы проверить, не поступили ли новые уведомления. Другие интерфейсы, "
"например <application>libpgtcl</application>, предоставляют более "
"высокоуровневые методы для обработки событий уведомлений; на самом деле с "
"<application>libpgtcl</application> разработчик приложения даже не должен "
"непосредственно выполнять команды <command>LISTEN</command> и "
"<command>UNLISTEN</command>. За дополнительными подробностями обратитесь к "
"документации интерфейса, который вы используете."

#: ref/listen.xml:68(para)
msgid ""
"<xref linkend=\"sql-notify\"/> contains a more extensive discussion of the "
"use of <command>LISTEN</command> and <command>NOTIFY</command>."
msgstr ""
"В описании <xref linkend=\"sql-notify\"/> использование <command>LISTEN</"
"command> и <command>NOTIFY</command> рассматривается более подробно."

#: ref/listen.xml:77(title)
msgid "Parameters"
msgstr "Параметры"

#: ref/listen.xml:83(para)
msgid "Name of a notification channel (any identifier)."
msgstr "Имя канала уведомлений (любой идентификатор)."

#: ref/listen.xml:92(title)
msgid "Notes"
msgstr "Замечания"

#: ref/listen.xml:94(para)
msgid ""
"<command>LISTEN</command> takes effect at transaction commit. If "
"<command>LISTEN</command> or <command>UNLISTEN</command> is executed within "
"a transaction that later rolls back, the set of notification channels being "
"listened to is unchanged."
msgstr ""
"<command>LISTEN</command> начинает действовать при фиксировании транзакции. "
"Если <command>LISTEN</command> или <command>UNLISTEN</command> выполняется в "
"транзакции, которая затем откатывается, состояние подписки этого сеанса на "
"уведомления не меняется."

#: ref/listen.xml:100(para)
msgid ""
"A transaction that has executed <command>LISTEN</command> cannot be prepared "
"for two-phase commit."
msgstr ""
"Транзакция, в которой выполняется <command>LISTEN</command>, не может быть "
"подготовлена для двухфазной фиксации."

#: ref/listen.xml:107(title)
msgid "Examples"
msgstr "Примеры"

#: ref/listen.xml:113(programlisting)
#, no-wrap
msgid ""
"LISTEN virtual;\n"
"NOTIFY virtual;\n"
"Asynchronous notification \"virtual\" received from server process with PID 8448."
msgstr ""
"LISTEN virtual;\n"
"NOTIFY virtual;\n"
"Asynchronous notification \"virtual\" received from server process with PID 8448."

#: ref/listen.xml:109(para)
msgid ""
"Configure and execute a listen/notify sequence from <application>psql</"
"application>: <placeholder-1/>"
msgstr ""
"Демонстрация процедуры ожидания/получения уведомления в <application>psql</"
"application>: <placeholder-1/>"

#: ref/listen.xml:121(title)
msgid "Compatibility"
msgstr "Совместимость"

#: ref/listen.xml:123(para)
msgid "There is no <command>LISTEN</command> statement in the SQL standard."
msgstr "Оператор <command>LISTEN</command> отсутствует в стандарте SQL."

#: ref/listen.xml:130(title)
msgid "See Also"
msgstr "См. также"

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: ref/listen.xml:0(None)
msgid "translator-credits"
msgstr "translator-credits"
