# Alexander Lakhin <a.lakhin@postgrespro.ru>, 2012, 2013, 2015, 2016.
# Pavel Luzanov <p.luzanov@postgrespro.ru>, 2015, 2016.
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2016-08-19 11:33+0300\n"
"PO-Revision-Date: 2016-04-13 09:36+0300\n"
"Language-Team: Russian <pgsql-docs@lists.postgrespro.ru>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Lokalize 2.0\n"

#: ref/notify.xml:8(indexterm)
msgid "<primary>NOTIFY</primary>"
msgstr "<primary>NOTIFY</primary>"

#: ref/notify.xml:13(refentrytitle)
msgctxt "refentrytitle"
msgid "NOTIFY"
msgstr "NOTIFY"

#: ref/notify.xml:14(manvolnum)
msgid "7"
msgstr "7"

#: ref/notify.xml:15(refmiscinfo)
msgid "SQL - Language Statements"
msgstr "Операторы языка SQL"

#: ref/notify.xml:19(refname)
msgctxt "refname"
msgid "NOTIFY"
msgstr "NOTIFY"

#: ref/notify.xml:20(refpurpose)
msgid "generate a notification"
msgstr "сгенерировать уведомление"

#: ref/notify.xml:25(replaceable) ref/notify.xml:132(replaceable)
msgid "channel"
msgstr "канал"

#: ref/notify.xml:25(replaceable) ref/notify.xml:140(replaceable)
msgid "payload"
msgstr "сообщение"

#: ref/notify.xml:24(synopsis)
#, no-wrap
msgid "NOTIFY <placeholder-1/> [ , <placeholder-2/> ]"
msgstr "NOTIFY <placeholder-1/> [ , <placeholder-2/> ]"

#: ref/notify.xml:30(title)
msgid "Description"
msgstr "Описание"

#: ref/notify.xml:32(para)
msgid ""
"The <command>NOTIFY</command> command sends a notification event together "
"with an optional <quote>payload</quote> string to each client application "
"that has previously executed <command>LISTEN <replaceable class=\"parameter"
"\">channel</replaceable></command> for the specified channel name in the "
"current database. Notifications are visible to all users."
msgstr ""
"Команда <command>NOTIFY</command> отправляет событие уведомления вместе с "
"дополнительной строкой <quote>сообщения</quote> всем клиентским приложениям, "
"которые до этого выполнили в текущей базе данных <command>LISTEN "
"<replaceable class=\"parameter\">канал</replaceable></command> с указанным "
"именем канала. Уведомления видны всем пользователям."

#: ref/notify.xml:41(para)
msgid ""
"<command>NOTIFY</command> provides a simple interprocess communication "
"mechanism for a collection of processes accessing the same "
"<productname>PostgreSQL</productname> database. A payload string can be sent "
"along with the notification, and higher-level mechanisms for passing "
"structured data can be built by using tables in the database to pass "
"additional data from notifier to listener(s)."
msgstr ""
"<command>NOTIFY</command> предоставляет простой механизм межпроцессного "
"взаимодействия для множества процессов, работающих с одной базой данных "
"<productname>PostgreSQL</productname>. Вместе с уведомлением может быть "
"передана строка сообщения, а передавая дополнительные данные через таблицы "
"базы данных, можно создать более высокоуровневые механизмы обмена "
"структурированными данными."

#: ref/notify.xml:50(para)
msgid ""
"The information passed to the client for a notification event includes the "
"notification channel name, the notifying session's server process "
"<acronym>PID</acronym>, and the payload string, which is an empty string if "
"it has not been specified."
msgstr ""
"Информация, передаваемая клиенту с уведомлением, включает имя канала "
"уведомлений, <acronym>PID</acronym> серверного процесса, управляющего "
"сеансом, который выдал уведомление, и строку сообщения (она будет пустой, "
"если сообщение не задано)."

#: ref/notify.xml:57(para)
msgid ""
"It is up to the database designer to define the channel names that will be "
"used in a given database and what each one means. Commonly, the channel name "
"is the same as the name of some table in the database, and the notify event "
"essentially means, <quote>I changed this table, take a look at it to see "
"what's new</quote>. But no such association is enforced by the "
"<command>NOTIFY</command> and <command>LISTEN</command> commands. For "
"example, a database designer could use several different channel names to "
"signal different sorts of changes to a single table. Alternatively, the "
"payload string could be used to differentiate various cases."
msgstr ""
"Выбор подходящих имён каналов и их назначения — дело проектировщика базы "
"данных. Обычно имя канала совпадает с именем какой-либо таблицы в базе, а "
"событие уведомления по сути означает <quote>я изменила эту таблицу, "
"посмотрите, что она содержит теперь</quote>. Однако команды <command>NOTIFY</"
"command> и <command>LISTEN</command> не навязывают именно такой подход. "
"Например, проектировщик базы данных может выбрать разные имена каналов, "
"чтобы сигнализировать о разных типах изменений в одной таблице. Кроме того, "
"строку сообщения тоже можно использовать для выделения различных событий."

#: ref/notify.xml:69(para)
msgid ""
"When <command>NOTIFY</command> is used to signal the occurrence of changes "
"to a particular table, a useful programming technique is to put the "
"<command>NOTIFY</command> in a statement trigger that is triggered by table "
"updates. In this way, notification happens automatically when the table is "
"changed, and the application programmer cannot accidentally forget to do it."
msgstr ""
"Если требуется сигнализировать о факте изменений в определённой таблице, "
"используя <command>NOTIFY</command>, можно применить полезный программный "
"приём — поместить <command>NOTIFY</command> в триггер уровня оператора, "
"который будет срабатывать при изменениях в таблице. При таком подходе "
"уведомление будет выдаваться автоматически, так что прикладной программист "
"не рискует случайно оставить какое-либо изменение без уведомления."

#: ref/notify.xml:77(para)
msgid ""
"<command>NOTIFY</command> interacts with SQL transactions in some important "
"ways. Firstly, if a <command>NOTIFY</command> is executed inside a "
"transaction, the notify events are not delivered until and unless the "
"transaction is committed. This is appropriate, since if the transaction is "
"aborted, all the commands within it have had no effect, including "
"<command>NOTIFY</command>. But it can be disconcerting if one is expecting "
"the notification events to be delivered immediately. Secondly, if a "
"listening session receives a notification signal while it is within a "
"transaction, the notification event will not be delivered to its connected "
"client until just after the transaction is completed (either committed or "
"aborted). Again, the reasoning is that if a notification were delivered "
"within a transaction that was later aborted, one would want the notification "
"to be undone somehow &mdash; but the server cannot <quote>take back</quote> "
"a notification once it has sent it to the client. So notification events are "
"only delivered between transactions. The upshot of this is that applications "
"using <command>NOTIFY</command> for real-time signaling should try to keep "
"their transactions short."
msgstr ""
"Транзакции оказывают значительное влияние на работу <command>NOTIFY</"
"command>. Во-первых, если <command>NOTIFY</command> выполняется внутри "
"транзакции, уведомления доставляются получателям после фиксирования "
"транзакции и только в этом случае. Это разумно, так как в случае прерывания "
"транзакции действие всех команд в ней аннулируется, включая <command>NOTIFY</"
"command>. Однако это может обескуражить тех, кто ожидает, что уведомления "
"будут приходить немедленно. Во-вторых, если ожидающий сеанс получает "
"уведомление внутри транзакции, это событие не будет доставлено подключённому "
"клиенту до завершения (фиксации или отката) транзакции. Это опять же "
"объясняется тем, что если уведомление будет доставлено в рамках транзакции, "
"которая затем будет прервана, может возникнуть желание как-то отменить его "
"&mdash; но сервер не может <quote>забрать назад</quote> уведомление после "
"того, как оно было отправлено клиенту. Поэтому уведомления доставляются "
"только между транзакциями. Учитывая вышесказанное, в приложениях, "
"применяющих <command>NOTIFY</command> для сигнализации в реальном времени, "
"следует минимизировать размер транзакций."

#: ref/notify.xml:97(para)
msgid ""
"If the same channel name is signaled multiple times from the same "
"transaction with identical payload strings, the database server can decide "
"to deliver a single notification only. On the other hand, notifications with "
"distinct payload strings will always be delivered as distinct notifications. "
"Similarly, notifications from different transactions will never get folded "
"into one notification. Except for dropping later instances of duplicate "
"notifications, <command>NOTIFY</command> guarantees that notifications from "
"the same transaction get delivered in the order they were sent. It is also "
"guaranteed that messages from different transactions are delivered in the "
"order in which the transactions committed."
msgstr ""
"Если в рамках одной транзакции в один канал поступило несколько уведомлений "
"с одинаковым сообщением, сервер может решить доставить только одно "
"уведомление. Если же сообщения различаются, уведомления будут всегда "
"доставлены по отдельности. Так же уведомления, поступающие от разных "
"транзакций, никогда не будут объединены в одно. Не считая фильтрации "
"последующих экземпляров дублирующихся уведомлений, <command>NOTIFY</command> "
"гарантирует, что уведомления от одной транзакции всегда поступают в том же "
"порядке, в каком были отправлены. Также гарантируется, что сообщения от "
"разных транзакций поступают в порядке фиксации этих транзакций."

#: ref/notify.xml:111(para)
msgid ""
"It is common for a client that executes <command>NOTIFY</command> to be "
"listening on the same notification channel itself. In that case it will get "
"back a notification event, just like all the other listening sessions. "
"Depending on the application logic, this could result in useless work, for "
"example, reading a database table to find the same updates that that session "
"just wrote out. It is possible to avoid such extra work by noticing whether "
"the notifying session's server process <acronym>PID</acronym> (supplied in "
"the notification event message) is the same as one's own session's "
"<acronym>PID</acronym> (available from <application>libpq</application>). "
"When they are the same, the notification event is one's own work bouncing "
"back, and can be ignored."
msgstr ""
"Часто бывает, что клиент, выполнивший <command>NOTIFY</command>, ожидает "
"уведомления на этом же канале. В этом случае он получит своё же уведомление, "
"как и любой другой сеанс, ожидающий уведомления. В зависимости от логики "
"приложения, это может привести к бессмысленным операциям, например, поиску "
"изменений в таблице, которые и были внесены этим же сеансом. Этой "
"дополнительной работы можно избежать, если проверить, не совпадает ли "
"<acronym>PID</acronym> сигнализирующего процесса (указанный в данных "
"события) с собственным <acronym>PID</acronym> сеанса (его можно узнать, "
"обратившись к <application>libpq</application>). Если они совпадают, значит "
"сеанс получил уведомление о собственных действиях, так что его можно "
"игнорировать."

#: ref/notify.xml:128(title)
msgid "Parameters"
msgstr "Параметры"

#: ref/notify.xml:134(para)
msgid "Name of the notification channel to be signaled (any identifier)."
msgstr "Имя канала для передачи уведомления (любой идентификатор)."

#: ref/notify.xml:142(para)
msgid ""
"The <quote>payload</quote> string to be communicated along with the "
"notification. This must be specified as a simple string literal. In the "
"default configuration it must be shorter than 8000 bytes. (If binary data or "
"large amounts of information need to be communicated, it's best to put it in "
"a database table and send the key of the record.)"
msgstr ""
"Строка <quote>сообщения</quote>, которая будет передана вместе с "
"уведомлением. Она должна задаваться простой текстовой константой. В "
"стандартной конфигурации её длина должна быть меньше 8000 байт. (Если "
"требуется передать двоичные данные или большой объём информации, лучше "
"поместить их в таблицу базы данных и передать ключ этой записи.)"

#: ref/notify.xml:155(title)
msgid "Notes"
msgstr "Замечания"

#: ref/notify.xml:157(para)
msgid ""
"There is a queue that holds notifications that have been sent but not yet "
"processed by all listening sessions. If this queue becomes full, "
"transactions calling <command>NOTIFY</command> will fail at commit. The "
"queue is quite large (8GB in a standard installation) and should be "
"sufficiently sized for almost every use case. However, no cleanup can take "
"place if a session executes <command>LISTEN</command> and then enters a "
"transaction for a very long time. Once the queue is half full you will see "
"warnings in the log file pointing you to the session that is preventing "
"cleanup. In this case you should make sure that this session ends its "
"current transaction so that cleanup can proceed."
msgstr ""
"Уведомления, которые были отправлены, но ещё не обработаны всеми ожидающими "
"сеансами, содержатся в очереди. Если эта очередь переполняется, транзакции, "
"в которых вызывается <command>NOTIFY</command>, будут завершены ошибкой при "
"попытке фиксации. Очередь довольно велика (8 ГБ в стандартной конфигурации), "
"так что её размера должно хватать практически во всех случаях, но если в "
"сеансе выполняется <command>LISTEN</command>, а затем продолжается очень "
"длительная транзакция, очередь не очищается. Как только эта очередь "
"заполняется наполовину, в журнал записываются предупреждения, в которых "
"указывается, какой сеанс препятствует очистке очереди. В этом случае следует "
"добиться завершения текущей транзакции в указанном сеансе, чтобы очередь "
"была очищена."

#: ref/notify.xml:169(para)
msgid ""
"The function <function>pg_notification_queue_usage</function> returns the "
"fraction of the queue that is currently occupied by pending notifications. "
"See <xref linkend=\"functions-info\"/> for more information."
msgstr ""
"Функция <function>pg_notification_queue_usage</function> показывает, какой "
"процент очереди в данный момент занят ожидающими уведомлениями. За "
"дополнительными сведениями обратитесь к <xref remap=\"3\" linkend="
"\"functions-info\"/>."

#: ref/notify.xml:174(para)
msgid ""
"A transaction that has executed <command>NOTIFY</command> cannot be prepared "
"for two-phase commit."
msgstr ""
"Транзакция, в которой выполняется <command>NOTIFY</command>, не может быть "
"подготовлена для двухфазной фиксации."

#: ref/notify.xml:180(title)
msgid "pg_notify"
msgstr "pg_notify"

#: ref/notify.xml:182(indexterm)
msgid "<primary>pg_notify</primary>"
msgstr "<primary>pg_notify</primary>"

#: ref/notify.xml:186(para)
msgid ""
"To send a notification you can also use the function "
"<literal><function>pg_notify</function>(<type>text</type>, <type>text</"
"type>)</literal>. The function takes the channel name as the first argument "
"and the payload as the second. The function is much easier to use than the "
"<command>NOTIFY</command> command if you need to work with non-constant "
"channel names and payloads."
msgstr ""
"Также отправить уведомление можно, используя функцию "
"<literal><function>pg_notify</function>(<type>text</type>, <type>text</"
"type>)</literal>. Эта функция принимает в первом аргументе имя канала, а во "
"втором текст сообщения. Гораздо удобнее использовать её, когда требуется "
"работать с динамическими именами каналов и сообщениями."

#: ref/notify.xml:198(title)
msgid "Examples"
msgstr "Примеры"

#: ref/notify.xml:204(programlisting)
#, no-wrap
msgid ""
"LISTEN virtual;\n"
"NOTIFY virtual;\n"
"Asynchronous notification \"virtual\" received from server process with PID 8448.\n"
"NOTIFY virtual, 'This is the payload';\n"
"Asynchronous notification \"virtual\" with payload \"This is the payload\" received from server process with PID 8448.\n"
"\n"
"LISTEN foo;\n"
"SELECT pg_notify('fo' || 'o', 'pay' || 'load');\n"
"Asynchronous notification \"foo\" with payload \"payload\" received from server process with PID 14728."
msgstr ""
"LISTEN virtual;\n"
"NOTIFY virtual;\n"
"Asynchronous notification \"virtual\" received from server process with PID 8448.\n"
"NOTIFY virtual, 'This is the payload';\n"
"Asynchronous notification \"virtual\" with payload \"This is the payload\" received from server process with PID 8448.\n"
"\n"
"LISTEN foo;\n"
"SELECT pg_notify('fo' || 'o', 'pay' || 'load');\n"
"Asynchronous notification \"foo\" with payload \"payload\" received from server process with PID 14728."

#: ref/notify.xml:200(para)
msgid ""
"Configure and execute a listen/notify sequence from <application>psql</"
"application>: <placeholder-1/>"
msgstr ""
"Демонстрация процедуры ожидания/получения уведомления в <application>psql</"
"application>: <placeholder-1/>"

#: ref/notify.xml:218(title)
msgid "Compatibility"
msgstr "Совместимость"

#: ref/notify.xml:220(para)
msgid "There is no <command>NOTIFY</command> statement in the SQL standard."
msgstr "Оператор <command>NOTIFY</command> отсутствует в стандарте SQL."

#: ref/notify.xml:227(title)
msgid "See Also"
msgstr "См. также"

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: ref/notify.xml:0(None)
msgid "translator-credits"
msgstr "translator-credits"
