# Alexander Lakhin <a.lakhin@postgrespro.ru>, 2012, 2013, 2015, 2016.
# Pavel Luzanov <p.luzanov@postgrespro.ru>, 2015, 2016.
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2016-08-19 11:33+0300\n"
"PO-Revision-Date: 2016-04-13 09:36+0300\n"
"Language-Team: Russian <pgsql-docs@lists.postgrespro.ru>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Lokalize 2.0\n"

#: ref/create_domain.xml:8(indexterm)
msgid "<primary>CREATE DOMAIN</primary>"
msgstr "<primary>CREATE DOMAIN</primary>"

#: ref/create_domain.xml:13(refentrytitle)
msgctxt "refentrytitle"
msgid "CREATE DOMAIN"
msgstr "CREATE DOMAIN"

#: ref/create_domain.xml:14(manvolnum)
msgid "7"
msgstr "7"

#: ref/create_domain.xml:15(refmiscinfo)
msgid "SQL - Language Statements"
msgstr "Операторы языка SQL"

#: ref/create_domain.xml:19(refname)
msgctxt "refname"
msgid "CREATE DOMAIN"
msgstr "CREATE DOMAIN"

#: ref/create_domain.xml:20(refpurpose)
msgid "define a new domain"
msgstr "создать домен"

#: ref/create_domain.xml:25(replaceable) ref/create_domain.xml:75(replaceable)
msgid "name"
msgstr "имя"

#: ref/create_domain.xml:25(replaceable) ref/create_domain.xml:84(replaceable)
msgid "data_type"
msgstr "тип_данных"

#: ref/create_domain.xml:26(replaceable) ref/create_domain.xml:94(replaceable)
msgid "collation"
msgstr "правило_сортировки"

#: ref/create_domain.xml:27(replaceable) ref/create_domain.xml:33(replaceable)
#: ref/create_domain.xml:106(replaceable)
#: ref/create_domain.xml:165(replaceable)
msgid "expression"
msgstr "выражение"

#: ref/create_domain.xml:28(replaceable) ref/create_domain.xml:30(replaceable)
msgid "constraint"
msgstr "ограничение"

#: ref/create_domain.xml:30(phrase)
msgid "where <placeholder-1/> is:"
msgstr "Здесь <placeholder-1/>:"

#: ref/create_domain.xml:32(replaceable) ref/create_domain.xml:130(replaceable)
msgid "constraint_name"
msgstr "имя_ограничения"

#: ref/create_domain.xml:24(synopsis)
#, no-wrap
msgid ""
"CREATE DOMAIN <placeholder-1/> [ AS ] <placeholder-2/>\n"
"    [ COLLATE <placeholder-3/> ]\n"
"    [ DEFAULT <placeholder-4/> ]\n"
"    [ <placeholder-5/> [ ... ] ]\n"
"\n"
"<placeholder-6/>\n"
"\n"
"[ CONSTRAINT <placeholder-7/> ]\n"
"{ NOT NULL | NULL | CHECK (<placeholder-8/>) }"
msgstr ""
"CREATE DOMAIN <placeholder-1/> [ AS ] <placeholder-2/>\n"
"    [ COLLATE <placeholder-3/> ]\n"
"    [ DEFAULT <placeholder-4/> ]\n"
"    [ <placeholder-5/> [ ... ] ]\n"
"\n"
"<placeholder-6/>\n"
"\n"
"[ CONSTRAINT <placeholder-7/> ]\n"
"{ NOT NULL | NULL | CHECK (<placeholder-8/>) }"

#: ref/create_domain.xml:38(title)
msgid "Description"
msgstr "Описание"

#: ref/create_domain.xml:40(para)
msgid ""
"<command>CREATE DOMAIN</command> creates a new domain. A domain is "
"essentially a data type with optional constraints (restrictions on the "
"allowed set of values). The user who defines a domain becomes its owner."
msgstr ""
"<command>CREATE DOMAIN</command> создаёт новый домен. Домен по сути "
"представляет собой тип данных с дополнительными условиями (ограничивающими "
"допустимый набор значений). Владельцем домена становится пользователь его "
"создавший."

#: ref/create_domain.xml:47(para)
msgid ""
"If a schema name is given (for example, <literal>CREATE DOMAIN myschema."
"mydomain ...</literal>) then the domain is created in the specified schema. "
"Otherwise it is created in the current schema. The domain name must be "
"unique among the types and domains existing in its schema."
msgstr ""
"Если задаётся имя схемы (например, <literal>CREATE DOMAIN myschema."
"mydomain ...</literal>), домен создаётся в указанной схеме, в противном "
"случае — в текущей. Имя домена должно быть уникальным среди имён типов и "
"доменов, существующих в этой схеме."

#: ref/create_domain.xml:55(para)
msgid ""
"Domains are useful for abstracting common constraints on fields into a "
"single location for maintenance. For example, several tables might contain "
"email address columns, all requiring the same CHECK constraint to verify the "
"address syntax. Define a domain rather than setting up each table's "
"constraint individually."
msgstr ""
"Домены полезны для абстрагирования и вынесения общих характеристик разных "
"полей в единое место для упрощения сопровождения. Например, в нескольких "
"таблицах может присутствовать столбец, содержащий электронный адрес, и для "
"всех требуются одинаковые ограничения CHECK, проверяющие синтаксис адреса. В "
"этом случае лучше определить домен, а не задавать для каждой таблицы "
"отдельные ограничения."

#: ref/create_domain.xml:64(para)
msgid ""
"To be able to create a domain, you must have <literal>USAGE</literal> "
"privilege on the underlying type."
msgstr ""
"Чтобы создать домен, необходимо иметь право <literal>USAGE</literal> для "
"нижележащего типа."

#: ref/create_domain.xml:71(title)
msgid "Parameters"
msgstr "Параметры"

#: ref/create_domain.xml:77(para)
msgid "The name (optionally schema-qualified) of a domain to be created."
msgstr "Имя (возможно, дополненное схемой) создаваемого домена."

#: ref/create_domain.xml:86(para)
msgid ""
"The underlying data type of the domain. This can include array specifiers."
msgstr ""
"Нижележащий тип данных домена (может включать определение массива с этим "
"типом)."

#: ref/create_domain.xml:96(para)
msgid ""
"An optional collation for the domain. If no collation is specified, the "
"underlying data type's default collation is used. The underlying type must "
"be collatable if <literal>COLLATE</literal> is specified."
msgstr ""
"Необязательное указание правила сортировки для домена. Если это указание "
"отсутствует, используется правило сортировки по умолчанию нижележащего типа "
"данных. Указать <literal>COLLATE</literal> можно, только если нижележащий "
"тип данных является сортируемым."

#: ref/create_domain.xml:106(literal)
msgid "DEFAULT <placeholder-1/>"
msgstr "DEFAULT <placeholder-1/>"

#: ref/create_domain.xml:109(para)
msgid ""
"The <literal>DEFAULT</literal> clause specifies a default value for columns "
"of the domain data type. The value is any variable-free expression (but "
"subqueries are not allowed). The data type of the default expression must "
"match the data type of the domain. If no default value is specified, then "
"the default value is the null value."
msgstr ""
"Предложение <literal>DEFAULT</literal> определяет значение по умолчанию для "
"столбцов, типом данных которых является этот домен. Значением может быть "
"любое выражение без переменных (подзапросы также не допускаются). Тип данных "
"этого выражения должен соответствовать типу данных домена. Если значение по "
"умолчанию не указано, им будет значение NULL."

#: ref/create_domain.xml:118(para)
msgid ""
"The default expression will be used in any insert operation that does not "
"specify a value for the column. If a default value is defined for a "
"particular column, it overrides any default associated with the domain. In "
"turn, the domain default overrides any default value associated with the "
"underlying data type."
msgstr ""
"Значение по умолчанию будет использоваться в любой операции добавления "
"строк, в которой не задано значение для этого столбца. Если значение по "
"умолчанию установлено для конкретного столбца, оно будет переопределять "
"значение по умолчанию, связанное с доменом. В свою очередь, значение по "
"умолчанию для домена переопределяет любое значение по умолчанию, связанное с "
"нижележащим типом данных."

#: ref/create_domain.xml:130(literal)
msgid "CONSTRAINT <placeholder-1/>"
msgstr "CONSTRAINT <placeholder-1/>"

#: ref/create_domain.xml:132(para)
msgid ""
"An optional name for a constraint. If not specified, the system generates a "
"name."
msgstr ""
"Имя ограничения. Если не указано явно, имя будет сгенерировано системой."

#: ref/create_domain.xml:140(literal)
msgid "NOT NULL"
msgstr "NOT NULL"

#: ref/create_domain.xml:142(para)
msgid ""
"Values of this domain are prevented from being null (but see notes below)."
msgstr "Значения этого домена будут отличны от NULL (но см. замечания ниже)."

#: ref/create_domain.xml:150(literal)
msgid "NULL"
msgstr "NULL"

#: ref/create_domain.xml:152(para)
msgid "Values of this domain are allowed to be null. This is the default."
msgstr ""
"Этот домен может содержать значение NULL. Это свойство домена по умолчанию."

#: ref/create_domain.xml:156(para)
msgid ""
"This clause is only intended for compatibility with nonstandard SQL "
"databases. Its use is discouraged in new applications."
msgstr ""
"Это предложение предназначено только для совместимости с нестандартными "
"базами данных SQL. Использовать его в новых приложениях не рекомендуется."

#: ref/create_domain.xml:165(literal)
msgid "CHECK (<placeholder-1/>)"
msgstr "CHECK (<placeholder-1/>)"

#: ref/create_domain.xml:167(para)
msgid ""
"<literal>CHECK</literal> clauses specify integrity constraints or tests "
"which values of the domain must satisfy. Each constraint must be an "
"expression producing a Boolean result. It should use the key word "
"<literal>VALUE</literal> to refer to the value being tested. Expressions "
"evaluating to TRUE or UNKNOWN succeed. If the expression produces a FALSE "
"result, an error is reported and the value is not allowed to be converted to "
"the domain type."
msgstr ""
"Предложения <literal>CHECK</literal> задают ограничения целостности или "
"проверки, которым должны удовлетворять значения домена. Каждое ограничение "
"должно представлять собой выражение, выдающее результат типа Boolean. "
"Проверяемое значение в этом выражении обозначается ключевым словом "
"<literal>VALUE</literal>. Если выражение выдаёт FALSE, сообщается об ошибке "
"и приведение значения к типу домена запрещается."

#: ref/create_domain.xml:177(para)
msgid ""
"Currently, <literal>CHECK</literal> expressions cannot contain subqueries "
"nor refer to variables other than <literal>VALUE</literal>."
msgstr ""
"В настоящее время выражения <literal>CHECK</literal> не могут содержать "
"переменные, кроме <literal>VALUE</literal>, и подзапросы."

#: ref/create_domain.xml:182(para)
msgid ""
"When a domain has multiple <literal>CHECK</literal> constraints, they will "
"be tested in alphabetical order by name. (<productname>PostgreSQL</"
"productname> versions before 9.5 did not honor any particular firing order "
"for <literal>CHECK</literal> constraints.)"
msgstr ""
"Когда для домена задано несколько ограничений <literal>CHECK</literal>, они "
"будут проверяться в алфавитном порядке имён. (До версии 9.5 в "
"<productname>PostgreSQL</productname> не было установлено никакого "
"определённого порядка обработки ограничений <literal>CHECK</literal>.)"

#: ref/create_domain.xml:194(title)
msgid "Notes"
msgstr "Замечания"

#: ref/create_domain.xml:203(programlisting)
#, no-wrap
msgid "INSERT INTO tab (domcol) VALUES ((SELECT domcol FROM tab WHERE false));"
msgstr "INSERT INTO tab (domcol) VALUES ((SELECT domcol FROM tab WHERE false));"

#: ref/create_domain.xml:196(para)
msgid ""
"Domain constraints, particularly <literal>NOT NULL</literal>, are checked "
"when converting a value to the domain type. It is possible for a column that "
"is nominally of the domain type to read as null despite there being such a "
"constraint. For example, this can happen in an outer-join query, if the "
"domain column is on the nullable side of the outer join. A more subtle "
"example is <placeholder-1/> The empty scalar sub-SELECT will produce a null "
"value that is considered to be of the domain type, so no further constraint "
"checking is applied to it, and the insertion will succeed."
msgstr ""
"Ограничения домена, в частности <literal>NOT NULL</literal>, проверяются при "
"преобразовании значения к типу домена. Однако из столбца, который номинально "
"имеет тип домена, всё же можно прочитать NULL, несмотря на такое "
"ограничение. Например, это может происходить в запросе внешнего соединения, "
"если столбец домена окажется в обнуляемой стороне внешнего соединения. Более "
"тонкий пример: <placeholder-1/> Пустой скалярный вложенный SELECT выдаст "
"значение NULL, типом которого будет считаться домен, так что к этому "
"значению не будут применены дополнительные проверки ограничений и строка "
"будет успешно добавлена."

#: ref/create_domain.xml:211(para)
msgid ""
"It is very difficult to avoid such problems, because of SQL's general "
"assumption that a null value is a valid value of every data type. Best "
"practice therefore is to design a domain's constraints so that a null value "
"is allowed, and then to apply column <literal>NOT NULL</literal> constraints "
"to columns of the domain type as needed, rather than directly to the domain "
"type."
msgstr ""
"Избежать таких проблем очень сложно, так как в SQL вообще предполагается, "
"что значение NULL является подходящим для любого типа данных. Таким образом, "
"лучше всего разрабатывать ограничения так, чтобы значения NULL допускались, "
"а затем при необходимости применять ограничения <literal>NOT NULL</literal> "
"к столбцам доменного типа, а не непосредственно к самому этому типу."

#: ref/create_domain.xml:221(title)
msgid "Examples"
msgstr "Примеры"

#: ref/create_domain.xml:228(programlisting)
#, no-wrap
msgid ""
"CREATE DOMAIN us_postal_code AS TEXT\n"
"CHECK(\n"
"   VALUE ~ '^\\d{5}$'\n"
"OR VALUE ~ '^\\d{5}-\\d{4}$'\n"
");\n"
"\n"
"CREATE TABLE us_snail_addy (\n"
"  address_id SERIAL PRIMARY KEY,\n"
"  street1 TEXT NOT NULL,\n"
"  street2 TEXT,\n"
"  street3 TEXT,\n"
"  city TEXT NOT NULL,\n"
"  postal us_postal_code NOT NULL\n"
");"
msgstr ""
"CREATE DOMAIN us_postal_code AS TEXT\n"
"CHECK(\n"
"   VALUE ~ '^\\d{5}$'\n"
"OR VALUE ~ '^\\d{5}-\\d{4}$'\n"
");\n"
"\n"
"CREATE TABLE us_snail_addy (\n"
"  address_id SERIAL PRIMARY KEY,\n"
"  street1 TEXT NOT NULL,\n"
"  street2 TEXT,\n"
"  street3 TEXT,\n"
"  city TEXT NOT NULL,\n"
"  postal us_postal_code NOT NULL\n"
");"

#: ref/create_domain.xml:223(para)
msgid ""
"This example creates the <type>us_postal_code</type> data type and then uses "
"the type in a table definition. A regular expression test is used to verify "
"that the value looks like a valid US postal code: <placeholder-1/>"
msgstr ""
"В этом примере создаётся тип данных <type>us_postal_code</type> (почтовый "
"индекс США), который затем используется в определении таблицы. Для проверки "
"значения на соответствие формату почтовых индексов США применяется проверка "
"с регулярными выражениями: <placeholder-1/>"

#: ref/create_domain.xml:247(title)
msgid "Compatibility"
msgstr "Совместимость"

#: ref/create_domain.xml:249(para)
msgid ""
"The command <command>CREATE DOMAIN</command> conforms to the SQL standard."
msgstr "Команда <command>CREATE DOMAIN</command> соответствует стандарту SQL."

#: ref/create_domain.xml:256(title)
msgid "See Also"
msgstr "См. также"

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: ref/create_domain.xml:0(None)
msgid "translator-credits"
msgstr "translator-credits"
