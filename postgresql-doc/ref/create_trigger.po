# Alexander Lakhin <a.lakhin@postgrespro.ru>, 2012, 2013, 2015, 2016, 2017.
# Pavel Luzanov <p.luzanov@postgrespro.ru>, 2015, 2016.
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2017-09-21 15:23+0300\n"
"PO-Revision-Date: 2017-09-22 17:54+0300\n"
"Last-Translator: Alexander Lakhin <a.lakhin@postgrespro.ru>\n"
"Language-Team: Russian <pgsql-docs@lists.postgrespro.ru>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Lokalize 2.0\n"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:8(indexterm)
msgid "<primary>CREATE TRIGGER</primary>"
msgstr "<primary>CREATE TRIGGER</primary>"

#. +> REL_10
#: ref/create_trigger.xml:12(indexterm)
msgid ""
"<primary>transition tables</primary> <seealso>ephemeral named relation</"
"seealso>"
msgstr ""
"<primary>переходные таблицы</primary> <seealso>эфемерное именованное "
"отношение</seealso>"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:18(refentrytitle)
msgctxt "refentrytitle"
msgid "CREATE TRIGGER"
msgstr "CREATE TRIGGER"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:19(manvolnum)
msgid "7"
msgstr "7"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:20(refmiscinfo)
msgid "SQL - Language Statements"
msgstr "Операторы языка SQL"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:24(refname)
msgctxt "refname"
msgid "CREATE TRIGGER"
msgstr "CREATE TRIGGER"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:25(refpurpose)
msgid "define a new trigger"
msgstr "создать триггер"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:30(replaceable)
#: ref/create_trigger.xml:221(replaceable)
msgid "name"
msgstr "имя"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:30(replaceable)
#: ref/create_trigger.xml:39(replaceable)
#: ref/create_trigger.xml:248(replaceable)
msgid "event"
msgstr "событие"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:31(replaceable)
#: ref/create_trigger.xml:277(replaceable)
msgid "table_name"
msgstr "имя_таблицы"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:32(replaceable)
#: ref/create_trigger.xml:287(replaceable)
msgid "referenced_table_name"
msgstr "ссылающаяся_таблица"

#. +> REL_10
#: ref/create_trigger.xml:34(replaceable)
#: ref/create_trigger.xml:337(replaceable)
msgid "transition_relation_name"
msgstr "имя_переходного_отношения"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:36(replaceable)
#: ref/create_trigger.xml:362(replaceable)
msgid "condition"
msgstr "условие"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:37(replaceable)
#: ref/create_trigger.xml:398(replaceable)
msgid "function_name"
msgstr "имя_функции"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:37(replaceable)
#: ref/create_trigger.xml:409(replaceable)
msgid "arguments"
msgstr "аргументы"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:39(phrase)
msgid "where <placeholder-1/> can be one of:"
msgstr "Здесь допускается <placeholder-1/>:"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:42(replaceable)
msgid "column_name"
msgstr "имя_столбца"

#. +> REL_10
#: ref/create_trigger.xml:29(synopsis)
#, no-wrap
msgid ""
"CREATE [ CONSTRAINT ] TRIGGER <placeholder-1/> { BEFORE | AFTER | INSTEAD OF } { <placeholder-2/> [ OR ... ] }\n"
"    ON <placeholder-3/>\n"
"    [ FROM <placeholder-4/> ]\n"
"    [ NOT DEFERRABLE | [ DEFERRABLE ] [ INITIALLY IMMEDIATE | INITIALLY DEFERRED ] ]\n"
"    [ REFERENCING { { OLD | NEW } TABLE [ AS ] <placeholder-5/> } [ ... ] ]\n"
"    [ FOR [ EACH ] { ROW | STATEMENT } ]\n"
"    [ WHEN ( <placeholder-6/> ) ]\n"
"    EXECUTE PROCEDURE <placeholder-7/> ( <placeholder-8/> )\n"
"\n"
"<placeholder-9/>\n"
"\n"
"    INSERT\n"
"    UPDATE [ OF <placeholder-10/> [, ... ] ]\n"
"    DELETE\n"
"    TRUNCATE"
msgstr ""
"CREATE [ CONSTRAINT ] TRIGGER <placeholder-1/> { BEFORE | AFTER | INSTEAD OF } { <placeholder-2/> [ OR ... ] }\n"
"    ON <placeholder-3/>\n"
"    [ FROM <placeholder-4/> ]\n"
"    [ NOT DEFERRABLE | [ DEFERRABLE ] [ INITIALLY IMMEDIATE | INITIALLY DEFERRED ] ]\n"
"    [ REFERENCING { { OLD | NEW } TABLE [ AS ] <placeholder-5/> } [ ... ] ]\n"
"    [ FOR [ EACH ] { ROW | STATEMENT } ]\n"
"    [ WHEN ( <placeholder-6/> ) ]\n"
"    EXECUTE PROCEDURE <placeholder-7/> ( <placeholder-8/> )\n"
"\n"
"<placeholder-9/>\n"
"\n"
"    INSERT\n"
"    UPDATE [ OF <placeholder-10/> [, ... ] ]\n"
"    DELETE\n"
"    TRUNCATE"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:49(title)
msgid "Description"
msgstr "Описание"

#. +> REL_10
#: ref/create_trigger.xml:51(para)
msgid ""
"<command>CREATE TRIGGER</command> creates a new trigger. The trigger will be "
"associated with the specified table, view, or foreign table and will execute "
"the specified function <replaceable class=\"parameter\">function_name</"
"replaceable> when certain operations are performed on that table."
msgstr ""
"<command>CREATE TRIGGER</command> создаёт новый триггер. Триггер будет "
"связан с указанной таблицей, представлением или сторонней таблицей и будет "
"выполнять заданную функцию <replaceable class=\"parameter\">имя_функции</"
"replaceable> при определённых операциях с этой таблицей."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:59(para)
msgid ""
"The trigger can be specified to fire before the operation is attempted on a "
"row (before constraints are checked and the <command>INSERT</command>, "
"<command>UPDATE</command>, or <command>DELETE</command> is attempted); or "
"after the operation has completed (after constraints are checked and the "
"<command>INSERT</command>, <command>UPDATE</command>, or <command>DELETE</"
"command> has completed); or instead of the operation (in the case of "
"inserts, updates or deletes on a view). If the trigger fires before or "
"instead of the event, the trigger can skip the operation for the current "
"row, or change the row being inserted (for <command>INSERT</command> and "
"<command>UPDATE</command> operations only). If the trigger fires after the "
"event, all changes, including the effects of other triggers, are "
"<quote>visible</quote> to the trigger."
msgstr ""
"Триггер можно настроить так, чтобы он срабатывал до операции со строкой (до "
"проверки ограничений и попытки выполнить <command>INSERT</command>, "
"<command>UPDATE</command> или <command>DELETE</command>) или после её "
"завершения (после проверки ограничений и выполнения <command>INSERT</"
"command>, <command>UPDATE</command> или <command>DELETE</command>), либо "
"вместо операции (при добавлении, изменении и удалении строк в "
"представлении). Если триггер срабатывает до или вместо события, он может "
"пропустить операцию с текущей строкой, либо изменить добавляемую строку "
"(только для операций <command>INSERT</command> и <command>UPDATE</command>). "
"Если триггер срабатывает после события, он <quote>видит</quote> все "
"изменения, включая результат действия других триггеров."

#. +> REL_10
#: ref/create_trigger.xml:76(para)
msgid ""
"A trigger that is marked <literal>FOR EACH ROW</literal> is called once for "
"every row that the operation modifies. For example, a <command>DELETE</"
"command> that affects 10 rows will cause any <literal>ON DELETE</literal> "
"triggers on the target relation to be called 10 separate times, once for "
"each deleted row. In contrast, a trigger that is marked <literal>FOR EACH "
"STATEMENT</literal> only executes once for any given operation, regardless "
"of how many rows it modifies (in particular, an operation that modifies zero "
"rows will still result in the execution of any applicable <literal>FOR EACH "
"STATEMENT</literal> triggers)."
msgstr ""
"Триггер с пометкой <literal>FOR EACH ROW</literal> вызывается один раз для "
"каждой строки, изменяемой в процессе операции. Например, операция "
"<command>DELETE</command>, удаляющая 10 строк, приведёт к срабатыванию всех "
"триггеров <literal>ON DELETE</literal> в целевом отношении 10 раз подряд, по "
"одному разу для каждой удаляемой строки. Триггер с пометкой <literal>FOR "
"EACH STATEMENT</literal>, напротив, вызывается только один раз для "
"конкретной операции, вне зависимости от того, как много строк она изменила "
"(в частности, при выполнении операции, изменяющей ноль строк, всё равно "
"будут вызваны все триггеры <literal>FOR EACH STATEMENT</literal>)."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:89(para)
msgid ""
"Triggers that are specified to fire <literal>INSTEAD OF</literal> the "
"trigger event must be marked <literal>FOR EACH ROW</literal>, and can only "
"be defined on views. <literal>BEFORE</literal> and <literal>AFTER</literal> "
"triggers on a view must be marked as <literal>FOR EACH STATEMENT</literal>."
msgstr ""
"Триггеры, срабатывающие в режиме <literal>INSTEAD OF</literal>, должны быть "
"помечены <literal>FOR EACH ROW</literal> и могут быть определены только для "
"представлений. Триггеры <literal>BEFORE</literal> и <literal>AFTER</literal> "
"для представлений должны быть помечены <literal>FOR EACH STATEMENT</literal>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:96(para)
msgid ""
"In addition, triggers may be defined to fire for <command>TRUNCATE</"
"command>, though only <literal>FOR EACH STATEMENT</literal>."
msgstr ""
"Кроме того, триггеры можно определить и для команды <command>TRUNCATE</"
"command>, но только типа <literal>FOR EACH STATEMENT</literal>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:102(para)
msgid ""
"The following table summarizes which types of triggers may be used on "
"tables, views, and foreign tables:"
msgstr ""
"В следующей таблице перечисляются типы триггеров, которые могут "
"использоваться для таблиц, представлений и сторонних таблиц:"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:111(entry)
msgid "When"
msgstr "Когда"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:112(entry)
msgid "Event"
msgstr "Событие"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:113(entry)
msgid "Row-level"
msgstr "На уровне строк"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:114(entry)
msgid "Statement-level"
msgstr "На уровне оператора"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:119(literal) ref/create_trigger.xml:235(literal)
msgid "BEFORE"
msgstr "BEFORE"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:120(entry) ref/create_trigger.xml:131(entry)
#: ref/create_trigger.xml:142(entry)
msgid ""
"<command>INSERT</command>/<command>UPDATE</command>/<command>DELETE</command>"
msgstr ""
"<command>INSERT</command>/<command>UPDATE</command>/<command>DELETE</command>"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:121(entry) ref/create_trigger.xml:132(entry)
msgid "Tables and foreign tables"
msgstr "Таблицы и сторонние таблицы"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:122(entry) ref/create_trigger.xml:133(entry)
msgid "Tables, views, and foreign tables"
msgstr "Таблицы, представления и сторонние таблицы"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:125(command) ref/create_trigger.xml:136(command)
#: ref/create_trigger.xml:147(command)
msgid "TRUNCATE"
msgstr "TRUNCATE"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:127(entry) ref/create_trigger.xml:138(entry)
msgid "Tables"
msgstr "Таблицы"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:130(literal) ref/create_trigger.xml:236(literal)
msgid "AFTER"
msgstr "AFTER"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:141(literal) ref/create_trigger.xml:237(literal)
msgid "INSTEAD OF"
msgstr "INSTEAD OF"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:143(entry)
msgid "Views"
msgstr "Представления"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:155(para)
msgid ""
"Also, a trigger definition can specify a Boolean <literal>WHEN</literal> "
"condition, which will be tested to see whether the trigger should be fired. "
"In row-level triggers the <literal>WHEN</literal> condition can examine the "
"old and/or new values of columns of the row. Statement-level triggers can "
"also have <literal>WHEN</literal> conditions, although the feature is not so "
"useful for them since the condition cannot refer to any values in the table."
msgstr ""
"Кроме того, в определении триггера можно указать булевское условие "
"<literal>WHEN</literal>, которое определит, вызывать триггер или нет. В "
"триггерах на уровне строк условия <literal>WHEN</literal> могут проверять "
"старые и/или новые значения столбцов в строке. Триггеры на уровне оператора "
"так же могут содержать условие <literal>WHEN</literal>, хотя для них это не "
"столь полезно, так как в этом условии нельзя ссылаться на какие-либо "
"значения в таблице."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:165(para)
msgid ""
"If multiple triggers of the same kind are defined for the same event, they "
"will be fired in alphabetical order by name."
msgstr ""
"Если для одного события определено несколько триггеров одного типа, они "
"будут срабатывать в алфавитном порядке их имён."

#. +> REL_10
#: ref/create_trigger.xml:170(para)
msgid ""
"When the <literal>CONSTRAINT</literal> option is specified, this command "
"creates a <firstterm>constraint trigger</firstterm>. This is the same as a "
"regular trigger except that the timing of the trigger firing can be adjusted "
"using <xref linkend=\"sql-set-constraints\"/>. Constraint triggers must be "
"<literal>AFTER ROW</literal> triggers on plain tables (not foreign tables). "
"They can be fired either at the end of the statement causing the triggering "
"event, or at the end of the containing transaction; in the latter case they "
"are said to be <firstterm>deferred</firstterm>. A pending deferred-trigger "
"firing can also be forced to happen immediately by using <command>SET "
"CONSTRAINTS</command>. Constraint triggers are expected to raise an "
"exception when the constraints they implement are violated."
msgstr ""
"Когда указывается параметр <literal>CONSTRAINT</literal>, эта команда "
"создаёт <firstterm>триггер ограничения</firstterm>. Он подобен обычным "
"триггерам, но отличается тем, что время его срабатывания можно изменить "
"командой <xref linkend=\"sql-set-constraints\"/>. Триггеры ограничений "
"должны быть триггерами типа <literal>AFTER ROW</literal> для обычных (не "
"сторонних) таблиц. Они могут срабатывать либо в конце оператора, вызвавшего "
"целевое событие, либо в конце содержащей его транзакции; в последнем случае "
"они называются <firstterm>отложенными</firstterm>. Срабатывание ожидающего "
"отложенного триггера можно вызвать немедленно, воспользовавшись командой "
"<command>SET CONSTRAINTS</command>. Предполагается, что триггеры ограничений "
"будут генерировать исключения при нарушении ограничений."

#. +> REL_10
#: ref/create_trigger.xml:185(para)
msgid ""
"The <literal>REFERENCING</literal> option enables collection of "
"<firstterm>transition relations</firstterm>, which are row sets that include "
"all of the rows inserted, deleted, or modified by the current SQL statement. "
"This feature lets the trigger see a global view of what the statement did, "
"not just one row at a time. This option is only allowed for an "
"<literal>AFTER</literal> trigger that is not a constraint trigger; also, if "
"the trigger is an <literal>UPDATE</literal> trigger, it must not specify a "
"<replaceable class=\"parameter\">column_name</replaceable> list. "
"<literal>OLD TABLE</literal> may only be specified once, and only for a "
"trigger that can fire on <literal>UPDATE</literal> or <literal>DELETE</"
"literal>; it creates a transition relation containing the <firstterm>before-"
"images</firstterm> of all rows updated or deleted by the statement. "
"Similarly, <literal>NEW TABLE</literal> may only be specified once, and only "
"for a trigger that can fire on <literal>UPDATE</literal> or <literal>INSERT</"
"literal>; it creates a transition relation containing the <firstterm>after-"
"images</firstterm> of all rows updated or inserted by the statement."
msgstr ""
"Когда указывается <literal>REFERENCING</literal>, для триггера собираются "
"<firstterm>переходные отношения</firstterm>, представляющие собой множества "
"строк, включающие все строки, которые были добавлены, удалены или изменены "
"текущим оператором SQL. Это позволяет триггеру наблюдать общую картину того, "
"что сделал оператор, а не только одну строку за другой. Это указание "
"допускается только для триггера <literal>AFTER</literal>, не являющегося "
"триггером ограничения; кроме того, если это триггер для <literal>UPDATE</"
"literal>, у него должен отсутствовать список <replaceable class=\"parameter"
"\">имён_столбцов</replaceable>. Указание <literal>OLD TABLE</literal> может "
"быть задано только один раз и только для триггера, который может срабатывать "
"при <literal>UPDATE</literal> или <literal>DELETE</literal>; оно создаёт "
"переходное отношение, содержащее <firstterm>образы-до-изменения</firstterm> "
"всех строк, модифицированных или удалённых оператором. Указание <literal>NEW "
"TABLE</literal>, подобным образом, может быть задано только единожды и "
"только для триггера, который может срабатывать для <literal>UPDATE</literal> "
"или <literal>INSERT</literal>; оно создаёт переходное отношение, содержащее "
"<firstterm>образы-после-изменения</firstterm> всех строк, модифицированных "
"или добавленных оператором."

#. +> REL_10
#: ref/create_trigger.xml:204(para)
msgid ""
"<command>SELECT</command> does not modify any rows so you cannot create "
"<command>SELECT</command> triggers. Rules and views may provide workable "
"solutions to problems that seem to need <command>SELECT</command> triggers."
msgstr ""
"<command>SELECT</command> не изменяет никакие строки, поэтому создавать "
"триггеры для <command>SELECT</command> нельзя. Для решения задач, в которых "
"требуются подобные триггеры, могут подойти правила или представления."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:211(para)
msgid ""
"Refer to <xref linkend=\"triggers\"/> for more information about triggers."
msgstr ""
"За дополнительными сведениями о триггерах обратитесь к <xref remap=\"3\" "
"linkend=\"triggers\"/>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:217(title)
msgid "Parameters"
msgstr "Параметры"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:223(para)
msgid ""
"The name to give the new trigger. This must be distinct from the name of any "
"other trigger for the same table. The name cannot be schema-qualified "
"&mdash; the trigger inherits the schema of its table. For a constraint "
"trigger, this is also the name to use when modifying the trigger's behavior "
"using <command>SET CONSTRAINTS</command>."
msgstr ""
"Имя, назначаемое новому триггеру. Это имя должно отличаться от имени любого "
"другого триггера в этой же таблице. Имя не может быть дополнено схемой "
"&mdash; триггер наследует схему от своей таблицы. Для триггеров ограничений "
"это имя также используется, когда требуется скорректировать поведение "
"триггера с помощью команды <command>SET CONSTRAINTS</command>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:239(para)
msgid ""
"Determines whether the function is called before, after, or instead of the "
"event. A constraint trigger can only be specified as <literal>AFTER</"
"literal>."
msgstr ""
"Определяет, будет ли заданная функция вызываться до, после или вместо "
"события. Для триггера ограничения можно указать только <literal>AFTER</"
"literal>."

#. +> REL_10
#: ref/create_trigger.xml:250(para)
msgid ""
"One of <literal>INSERT</literal>, <literal>UPDATE</literal>, "
"<literal>DELETE</literal>, or <literal>TRUNCATE</literal>; this specifies "
"the event that will fire the trigger. Multiple events can be specified using "
"<literal>OR</literal>, except when transition relations are requested."
msgstr ""
"Принимает одно из значений: <literal>INSERT</literal>, <literal>UPDATE</"
"literal>, <literal>DELETE</literal> или <literal>TRUNCATE</literal>; этот "
"параметр определяет событие, при котором будет срабатывать триггер. "
"Несколько событий можно указать, добавив между ними слово <literal>OR</"
"literal>, если только не запрашиваются переходные отношения."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:258(para)
msgid ""
"For <literal>UPDATE</literal> events, it is possible to specify a list of "
"columns using this syntax: <synopsis>\n"
"UPDATE OF <replaceable>column_name1</replaceable> [, "
"<replaceable>column_name2</replaceable> ... ]\n"
"</synopsis> The trigger will only fire if at least one of the listed columns "
"is mentioned as a target of the <command>UPDATE</command> command."
msgstr ""
"Для событий <literal>UPDATE</literal> можно указать список столбцов, "
"используя такую запись: <synopsis>\n"
"UPDATE OF <replaceable>имя_столбца1</replaceable> [, "
"<replaceable>имя_столбца2</replaceable> ... ]\n"
"</synopsis> Такой триггер сработает, только если в указанном в целевой "
"команде <command>UPDATE</command> списке столбцов найдётся минимум одна из "
"перечисленных."

#. +> REL_10
#: ref/create_trigger.xml:268(para)
msgid ""
"<literal>INSTEAD OF UPDATE</literal> events do not allow a list of columns. "
"A column list cannot be specified when requesting transition relations, "
"either."
msgstr ""
"Для событий <literal>INSTEAD OF UPDATE</literal> указание списка столбцов не "
"допускается. Список столбцов также нельзя задать, когда запрашиваются "
"переходные отношения."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:279(para)
msgid ""
"The name (optionally schema-qualified) of the table, view, or foreign table "
"the trigger is for."
msgstr ""
"Имя (возможно, дополненное схемой) таблицы, представления или сторонней "
"таблицы, для которых предназначен триггер."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:289(para)
msgid ""
"The (possibly schema-qualified) name of another table referenced by the "
"constraint. This option is used for foreign-key constraints and is not "
"recommended for general use. This can only be specified for constraint "
"triggers."
msgstr ""
"Имя (возможно, дополненное схемой) другой таблицы, на которую ссылается "
"ограничение. Оно используется для ограничений внешнего ключа и не "
"рекомендуется для обычного применения. Это указание допускается только для "
"триггеров ограничений."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:299(literal)
msgid "DEFERRABLE"
msgstr "DEFERRABLE"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:300(literal)
msgid "NOT DEFERRABLE"
msgstr "NOT DEFERRABLE"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:301(literal)
msgid "INITIALLY IMMEDIATE"
msgstr "INITIALLY IMMEDIATE"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:302(literal)
msgid "INITIALLY DEFERRED"
msgstr "INITIALLY DEFERRED"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:304(para)
msgid ""
"The default timing of the trigger. See the <xref linkend=\"sql-createtable\"/"
"> documentation for details of these constraint options. This can only be "
"specified for constraint triggers."
msgstr ""
"Время срабатывания триггера по умолчанию. Подробнее возможные варианты "
"описаны в документации <xref linkend=\"sql-createtable\"/>. Это указание "
"допускается только для триггеров ограничений."

#. +> REL_10
#: ref/create_trigger.xml:314(literal)
msgid "REFERENCING"
msgstr "REFERENCING"

#. +> REL_10
#: ref/create_trigger.xml:316(para)
msgid ""
"This keyword immediately precedes the declaration of one or two relation "
"names that provide access to the transition relations of the triggering "
"statement."
msgstr ""
"Это ключевое слово непосредственно предшествует объявлению одного или двух "
"имён, по которым можно будет обращаться к переходным отношениями, образуемым "
"при выполнении целевого оператора."

#. +> REL_10
#: ref/create_trigger.xml:325(literal)
msgid "OLD TABLE"
msgstr "OLD TABLE"

#. +> REL_10
#: ref/create_trigger.xml:326(literal)
msgid "NEW TABLE"
msgstr "NEW TABLE"

#. +> REL_10
#: ref/create_trigger.xml:328(para)
msgid ""
"This clause indicates whether the following relation name is for the before-"
"image transition relation or the after-image transition relation."
msgstr ""
"Это предложение указывает, будет ли следующее имя относиться к переходному "
"отношению с образом-до-изменения или к переходному отношению с образом-после-"
"изменения."

#. +> REL_10
#: ref/create_trigger.xml:339(para)
msgid ""
"The (unqualified) name to be used within the trigger for this transition "
"relation."
msgstr ""
"Имя (неполное, без схемы), которое будет использоваться в триггере для "
"обращения к этому переходному отношению."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:347(literal)
msgid "FOR EACH ROW"
msgstr "FOR EACH ROW"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:348(literal)
msgid "FOR EACH STATEMENT"
msgstr "FOR EACH STATEMENT"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:351(para)
msgid ""
"This specifies whether the trigger procedure should be fired once for every "
"row affected by the trigger event, or just once per SQL statement. If "
"neither is specified, <literal>FOR EACH STATEMENT</literal> is the default. "
"Constraint triggers can only be specified <literal>FOR EACH ROW</literal>."
msgstr ""
"Определяет, будет ли процедура триггера срабатывать один раз для каждой "
"строки, либо для SQL-оператора. Если не указано ничего, подразумевается "
"<literal>FOR EACH STATEMENT</literal> (для оператора). Для триггеров "
"ограничений можно указать только <literal>FOR EACH ROW</literal>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:364(para)
msgid ""
"A Boolean expression that determines whether the trigger function will "
"actually be executed. If <literal>WHEN</literal> is specified, the function "
"will only be called if the <replaceable class=\"parameter\">condition</"
"replaceable> returns <literal>true</literal>. In <literal>FOR EACH ROW</"
"literal> triggers, the <literal>WHEN</literal> condition can refer to "
"columns of the old and/or new row values by writing <literal>OLD."
"<replaceable class=\"parameter\">column_name</replaceable></literal> or "
"<literal>NEW.<replaceable class=\"parameter\">column_name</replaceable></"
"literal> respectively. Of course, <literal>INSERT</literal> triggers cannot "
"refer to <literal>OLD</literal> and <literal>DELETE</literal> triggers "
"cannot refer to <literal>NEW</literal>."
msgstr ""
"Булевское выражение, определяющее, будет ли выполняться функция триггера. "
"Если для триггера задано указание <literal>WHEN</literal>, функция будет "
"вызываться, только когда <replaceable class=\"parameter\">условие</"
"replaceable> возвращает <literal>true</literal>. В триггерах <literal>FOR "
"EACH ROW</literal> условие <literal>WHEN</literal> может ссылаться на "
"значения столбца в старой и/или новой строке, в виде <literal>OLD."
"<replaceable class=\"parameter\">имя_столбца</replaceable></literal> и "
"<literal>NEW.<replaceable class=\"parameter\">имя_столбца</replaceable></"
"literal>, соответственно. Разумеется, триггеры <literal>INSERT</literal> не "
"могут ссылаться на <literal>OLD</literal>, а триггеры <literal>DELETE</"
"literal> не могут ссылаться на <literal>NEW</literal>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:379(para)
msgid ""
"<literal>INSTEAD OF</literal> triggers do not support <literal>WHEN</"
"literal> conditions."
msgstr ""
"Триггеры <literal>INSTEAD OF</literal> не поддерживают условия "
"<literal>WHEN</literal>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:383(para)
msgid ""
"Currently, <literal>WHEN</literal> expressions cannot contain subqueries."
msgstr ""
"В настоящее время выражения <literal>WHEN</literal> не могут содержать "
"подзапросы."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:388(para)
msgid ""
"Note that for constraint triggers, evaluation of the <literal>WHEN</literal> "
"condition is not deferred, but occurs immediately after the row update "
"operation is performed. If the condition does not evaluate to true then the "
"trigger is not queued for deferred execution."
msgstr ""
"Учтите, что для триггеров ограничений вычисление условия <literal>WHEN</"
"literal> не откладывается, а выполняется немедленно после операции, "
"изменяющей строки. Если результат условия — ложь, сам триггер не "
"откладывается для последующего выполнения."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:400(para)
msgid ""
"A user-supplied function that is declared as taking no arguments and "
"returning type <literal>trigger</literal>, which is executed when the "
"trigger fires."
msgstr ""
"Заданная пользователем функция, объявленная как функция без аргументов и "
"возвращающая тип <literal>trigger</literal>, которая будет вызываться при "
"срабатывании триггера."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:411(para)
msgid ""
"An optional comma-separated list of arguments to be provided to the function "
"when the trigger is executed. The arguments are literal string constants. "
"Simple names and numeric constants can be written here, too, but they will "
"all be converted to strings. Please check the description of the "
"implementation language of the trigger function to find out how these "
"arguments can be accessed within the function; it might be different from "
"normal function arguments."
msgstr ""
"Необязательный список аргументов через запятую, которые будут переданы "
"функции при срабатывании триггера. В качестве аргументов функции передаются "
"строковые константы. И хотя в этом списке можно записать и простые имена или "
"числовые константы, они тоже будут преобразованы в строки. Порядок обращения "
"к таким аргументам в функции триггера может отличаться от обычных "
"аргументов, поэтому его следует уточнить в описании языка реализации этой "
"функции."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:427(title)
msgid "Notes"
msgstr "Замечания"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:429(para)
msgid ""
"To create a trigger on a table, the user must have the <literal>TRIGGER</"
"literal> privilege on the table. The user must also have <literal>EXECUTE</"
"literal> privilege on the trigger function."
msgstr ""
"Чтобы создать триггер, пользователь должен иметь право <literal>TRIGGER</"
"literal> для этой таблицы. Также пользователь должен иметь право "
"<literal>EXECUTE</literal> для триггерной функции."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:435(para)
msgid "Use <xref linkend=\"sql-droptrigger\"/> to remove a trigger."
msgstr ""
"Для удаления триггера применяется команда <xref linkend=\"sql-droptrigger\"/"
">."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:439(para)
msgid ""
"A column-specific trigger (one defined using the <literal>UPDATE OF "
"<replaceable>column_name</replaceable></literal> syntax) will fire when any "
"of its columns are listed as targets in the <command>UPDATE</command> "
"command's <literal>SET</literal> list. It is possible for a column's value "
"to change even when the trigger is not fired, because changes made to the "
"row's contents by <literal>BEFORE UPDATE</literal> triggers are not "
"considered. Conversely, a command such as <literal>UPDATE ... SET x = x ...</"
"literal> will fire a trigger on column <literal>x</literal>, even though the "
"column's value did not change."
msgstr ""
"Триггер для избранных столбцов (определённый с помощью <literal>UPDATE OF "
"<replaceable>имя_столбца</replaceable></literal>) будет срабатывать, когда "
"его столбцы перечислены в качестве целевых в списке <literal>SET</literal> "
"команды <command>UPDATE</command>. Изменения, вносимые в строки триггерами "
"<literal>BEFORE UPDATE</literal>, при этом не учитываются, поэтому значения "
"столбцов можно изменить так, что триггер не сработает. И наоборот, при "
"выполнении команды <literal>UPDATE ... SET x = x ...</literal> триггер для "
"столбца <literal>x</literal> сработает, хотя значение столбца не меняется."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:451(para)
msgid ""
"In a <literal>BEFORE</literal> trigger, the <literal>WHEN</literal> "
"condition is evaluated just before the function is or would be executed, so "
"using <literal>WHEN</literal> is not materially different from testing the "
"same condition at the beginning of the trigger function. Note in particular "
"that the <literal>NEW</literal> row seen by the condition is the current "
"value, as possibly modified by earlier triggers. Also, a <literal>BEFORE</"
"literal> trigger's <literal>WHEN</literal> condition is not allowed to "
"examine the system columns of the <literal>NEW</literal> row (such as "
"<literal>oid</literal>), because those won't have been set yet."
msgstr ""
"В триггере <literal>BEFORE</literal> условие <literal>WHEN</literal> "
"вычисляется непосредственно перед возможным вызовом функции, поэтому "
"проверка <literal>WHEN</literal> существенно не отличается от проверки того "
"же условия в начале функции триггера. В частности, учтите, что строка "
"<literal>NEW</literal>, которую видит ограничение, содержит текущие "
"значения, возможно, изменённые предыдущими триггерами. Кроме того, в "
"триггере <literal>BEFORE</literal> условие <literal>WHEN</literal> не может "
"проверять системные столбцы в строке <literal>NEW</literal> (например, "
"<literal>oid</literal>), так как они ещё не установлены."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:463(para)
msgid ""
"In an <literal>AFTER</literal> trigger, the <literal>WHEN</literal> "
"condition is evaluated just after the row update occurs, and it determines "
"whether an event is queued to fire the trigger at the end of statement. So "
"when an <literal>AFTER</literal> trigger's <literal>WHEN</literal> condition "
"does not return true, it is not necessary to queue an event nor to re-fetch "
"the row at end of statement. This can result in significant speedups in "
"statements that modify many rows, if the trigger only needs to be fired for "
"a few of the rows."
msgstr ""
"В триггере <literal>AFTER</literal> условие <literal>WHEN</literal> "
"проверяется сразу после изменения строки, и если оно выполняется, событие "
"запоминается, чтобы вызвать триггер в конце оператора. Если же для триггера "
"<literal>AFTER</literal> условие <literal>WHEN</literal> не выполняется, нет "
"необходимости запоминать событие для последующей обработки или заново "
"перечитывать строку в конце оператора. Это приводит к значительному "
"ускорению операторов, изменяющих множество строк, когда триггер должен "
"срабатывать только для некоторых из них."

#. +> REL_10
#: ref/create_trigger.xml:474(para)
msgid ""
"In some cases it is possible for a single SQL command to fire more than one "
"kind of trigger. For instance an <command>INSERT</command> with an "
"<literal>ON CONFLICT DO UPDATE</literal> clause may cause both insert and "
"update operations, so it will fire both kinds of triggers as needed. The "
"transition relations supplied to triggers are specific to their event type; "
"thus an <command>INSERT</command> trigger will see only the inserted rows, "
"while an <command>UPDATE</command> trigger will see only the updated rows."
msgstr ""
"В некоторых случаях одна команда SQL может вызывать сразу нескольких видов "
"триггеров. Например, <command>INSERT</command> с предложением <literal>ON "
"CONFLICT DO UPDATE</literal> может выполнять операции как добавления, так и "
"изменения, так что она при необходимости будет вызывать триггеры обоих "
"видов. При этом переходные отношения, предоставляемые триггерам, будут "
"разными в зависимости от типа события; то есть триггер <command>INSERT</"
"command> будет видеть только добавленные строки, а триггер <command>UPDATE</"
"command> — только изменённые."

#. +> REL_10
#: ref/create_trigger.xml:485(para)
msgid ""
"Row updates or deletions caused by foreign-key enforcement actions, such as "
"<literal>ON UPDATE CASCADE</literal> or <literal>ON DELETE SET NULL</"
"literal>, are treated as part of the SQL command that caused them (note that "
"such actions are never deferred). Relevant triggers on the affected table "
"will be fired, so that this provides another way in which a SQL command "
"might fire triggers not directly matching its type. In simple cases, "
"triggers that request transition relations will see all changes caused in "
"their table by a single original SQL command as a single transition "
"relation. However, there are cases in which the presence of an "
"<literal>AFTER ROW</literal> trigger that requests transition relations will "
"cause the foreign-key enforcement actions triggered by a single SQL command "
"to be split into multiple steps, each with its own transition relation(s). "
"In such cases, any statement-level triggers that are present will be fired "
"once per creation of a transition relation set, ensuring that the triggers "
"see each affected row in a transition relation once and only once."
msgstr ""
"Изменения или удаления строк, вызванные действиями по обеспечению "
"целостности внешнего ключа, например, <literal>ON UPDATE CASCADE</literal> "
"или <literal>ON DELETE SET NULL</literal>, считаются частью SQL-команды, "
"вызвавшей эти действия (заметьте, что такие действия не могут быть "
"отложенными). В затрагиваемой таблице будут вызваны соответствующие "
"триггеры, и таким образом появляется возможность вызова триггеров для SQL-"
"команды, не соответствующей непосредственно их типу. В простых ситуациях "
"триггеры, запрашивающие переходные отношения, будут видеть все изменения, "
"произведённые в их таблице одной исходной командой SQL, в виде одного "
"переходного отношения. Однако возможны случаи, в которых присутствие "
"триггера <literal>AFTER ROW</literal>, запрашивающего переходные отношения, "
"приведёт к тому, что операции для обеспечения целостности внешнего ключа, "
"вызванные одной SQL-командой, будут разделены на несколько этапов, и на "
"каждом будут свои переходные отношения. В таких случаях все существующие "
"триггеры уровня оператора будут срабатывать единожды при создании "
"переходного отношения, что гарантирует, что эти триггеры будут видеть каждую "
"обрабатываемую строку в переходном отношении один и только один раз."

#. +> REL_10
#: ref/create_trigger.xml:503(para)
msgid ""
"Modifying a partitioned table or a table with inheritance children fires "
"statement-level triggers directly attached to that table, but not statement-"
"level triggers for its partitions or child tables. In contrast, row-level "
"triggers are fired for all affected partitions or child tables. If a "
"statement-level trigger has been defined with transition relations named by "
"a <literal>REFERENCING</literal> clause, then before and after images of "
"rows are visible from all affected partitions or child tables. In the case "
"of inheritance children, the row images include only columns that are "
"present in the table that the trigger is attached to. Currently, row-level "
"triggers with transition relations cannot be defined on partitions or "
"inheritance child tables."
msgstr ""
"При изменении данных в секционированной таблице или таблице с потомками "
"срабатывают триггеры уровня оператора, непосредственно связанные с этой "
"таблицей, но не триггеры уровня оператора для её секций или дочерних таблиц. "
"Триггеры уровня строк, напротив, срабатывают для всех затрагиваемых секций "
"или дочерних таблиц. Если триггер уровня оператора был определён с "
"переходными отношениями, названными в указании <literal>REFERENCING</"
"literal>, то в них будут видны образы строк из всех затронутых секций или "
"дочерних таблиц. В случае с потомками в иерархии наследования образы строк "
"будут содержать только столбцы, присутствующие в таблице, с которой связан "
"триггер. В настоящее время триггеры уровня строк с переходными отношениями "
"нельзя определить для секций или дочерних таблиц в иерархии наследования."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:517(para)
msgid ""
"In <productname>PostgreSQL</productname> versions before 7.3, it was "
"necessary to declare trigger functions as returning the placeholder type "
"<type>opaque</type>, rather than <type>trigger</type>. To support loading of "
"old dump files, <command>CREATE TRIGGER</command> will accept a function "
"declared as returning <type>opaque</type>, but it will issue a notice and "
"change the function's declared return type to <type>trigger</type>."
msgstr ""
"В <productname>PostgreSQL</productname> до версии 7.3 обязательно "
"требовалось объявлять триггерные функции, как возвращающие фиктивный тип "
"<type>opaque</type>, а не <type>trigger</type>. Для поддержки загрузки "
"старых файлов экспорта БД, команда <command>CREATE TRIGGER</command> "
"принимает функции с объявленным типом результата <type>opaque</type>, но при "
"этом выдаётся предупреждение и тип результата меняется на <type>trigger</"
"type>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:528(title)
msgid "Examples"
msgstr "Примеры"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:534(programlisting)
#, no-wrap
msgid ""
"CREATE TRIGGER check_update\n"
"    BEFORE UPDATE ON accounts\n"
"    FOR EACH ROW\n"
"    EXECUTE PROCEDURE check_account_update();"
msgstr ""
"CREATE TRIGGER check_update\n"
"    BEFORE UPDATE ON accounts\n"
"    FOR EACH ROW\n"
"    EXECUTE PROCEDURE check_account_update();"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:544(programlisting)
#, no-wrap
msgid ""
"CREATE TRIGGER check_update\n"
"    BEFORE UPDATE OF balance ON accounts\n"
"    FOR EACH ROW\n"
"    EXECUTE PROCEDURE check_account_update();"
msgstr ""
"CREATE TRIGGER check_update\n"
"    BEFORE UPDATE OF balance ON accounts\n"
"    FOR EACH ROW\n"
"    EXECUTE PROCEDURE check_account_update();"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:554(programlisting)
#, no-wrap
msgid ""
"CREATE TRIGGER check_update\n"
"    BEFORE UPDATE ON accounts\n"
"    FOR EACH ROW\n"
"    WHEN (OLD.balance IS DISTINCT FROM NEW.balance)\n"
"    EXECUTE PROCEDURE check_account_update();"
msgstr ""
"CREATE TRIGGER check_update\n"
"    BEFORE UPDATE ON accounts\n"
"    FOR EACH ROW\n"
"    WHEN (OLD.balance IS DISTINCT FROM NEW.balance)\n"
"    EXECUTE PROCEDURE check_account_update();"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:565(programlisting)
#, no-wrap
msgid ""
"CREATE TRIGGER log_update\n"
"    AFTER UPDATE ON accounts\n"
"    FOR EACH ROW\n"
"    WHEN (OLD.* IS DISTINCT FROM NEW.*)\n"
"    EXECUTE PROCEDURE log_account_update();"
msgstr ""
"CREATE TRIGGER log_update\n"
"    AFTER UPDATE ON accounts\n"
"    FOR EACH ROW\n"
"    WHEN (OLD.* IS DISTINCT FROM NEW.*)\n"
"    EXECUTE PROCEDURE log_account_update();"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:576(programlisting)
#, no-wrap
msgid ""
"CREATE TRIGGER view_insert\n"
"    INSTEAD OF INSERT ON my_view\n"
"    FOR EACH ROW\n"
"    EXECUTE PROCEDURE view_insert_row();"
msgstr ""
"CREATE TRIGGER view_insert\n"
"    INSTEAD OF INSERT ON my_view\n"
"    FOR EACH ROW\n"
"    EXECUTE PROCEDURE view_insert_row();"

#. +> REL_10
#: ref/create_trigger.xml:587(programlisting)
#, no-wrap
msgid ""
"CREATE TRIGGER transfer_insert\n"
"    AFTER INSERT ON transfer\n"
"    REFERENCING NEW TABLE AS inserted\n"
"    FOR EACH STATEMENT\n"
"    EXECUTE PROCEDURE check_transfer_balances_to_zero();"
msgstr ""
"CREATE TRIGGER transfer_insert\n"
"    AFTER INSERT ON transfer\n"
"    REFERENCING NEW TABLE AS inserted\n"
"    FOR EACH STATEMENT\n"
"    EXECUTE PROCEDURE check_transfer_balances_to_zero();"

#. +> REL_10
#: ref/create_trigger.xml:599(programlisting)
#, no-wrap
msgid ""
"CREATE TRIGGER paired_items_update\n"
"    AFTER UPDATE ON paired_items\n"
"    REFERENCING NEW TABLE AS newtab OLD TABLE AS oldtab\n"
"    FOR EACH ROW\n"
"    EXECUTE PROCEDURE check_matching_pairs();"
msgstr ""
"CREATE TRIGGER paired_items_update\n"
"    AFTER UPDATE ON paired_items\n"
"    REFERENCING NEW TABLE AS newtab OLD TABLE AS oldtab\n"
"    FOR EACH ROW\n"
"    EXECUTE PROCEDURE check_matching_pairs();"

#. +> REL_10
#: ref/create_trigger.xml:530(para)
msgid ""
"Execute the function <function>check_account_update</function> whenever a "
"row of the table <literal>accounts</literal> is about to be updated: "
"<placeholder-1/> The same, but only execute the function if column "
"<literal>balance</literal> is specified as a target in the <command>UPDATE</"
"command> command: <placeholder-2/> This form only executes the function if "
"column <literal>balance</literal> has in fact changed value: <placeholder-3/"
"> Call a function to log updates of <literal>accounts</literal>, but only if "
"something changed: <placeholder-4/> Execute the function "
"<function>view_insert_row</function> for each row to insert rows into the "
"tables underlying a view: <placeholder-5/> Execute the function "
"<function>check_transfer_balances_to_zero</function> for each statement to "
"confirm that the <literal>transfer</literal> rows offset to a net of zero: "
"<placeholder-6/> Execute the function <function>check_matching_pairs</"
"function> for each row to confirm that changes are made to matching pairs at "
"the same time (by the same statement): <placeholder-7/>"
msgstr ""
"Выполнение функции <function>check_account_update</function> перед любым "
"изменением строк в таблице <literal>accounts</literal>: <placeholder-1/> То "
"же самое, но функция триггера будет выполняться, только если столбец "
"<literal>balance</literal> присутствует в списке целевых столбцов команды "
"<command>UPDATE</command>: <placeholder-2/> В этом примере функция будет "
"выполняться, если значение столбца <literal>balance</literal> в "
"действительности изменилось: <placeholder-3/> Вызов функции, ведущей журнал "
"изменений в <literal>accounts</literal>, но только если что-то изменилось: "
"<placeholder-4/> Выполнение для каждой строки функции "
"<function>view_insert_row</function>, которая будет вставлять строки в "
"нижележащие таблицы представления: <placeholder-5/> Выполнение функции "
"<function>check_transfer_balances_to_zero</function> для каждого оператора, "
"проверяющей, что строки <literal>transfer</literal> в совокупности дают "
"нулевой баланс: <placeholder-6/> Выполнение функции "
"<function>check_matching_pairs</function> для каждой строки, проверяющей, "
"что соответствующие пары пунктов изменены синхронно (одним оператором): "
"<placeholder-7/>"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:608(para)
msgid ""
"<xref linkend=\"trigger-example\"/> contains a complete example of a trigger "
"function written in C."
msgstr ""
"В <xref remap=\"6\" linkend=\"trigger-example\"/> приведён полный пример "
"функции триггера, написанной на C."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:615(title)
msgid "Compatibility"
msgstr "Совместимость"

#. +> REL_10
#: ref/create_trigger.xml:633(para)
msgid ""
"While transition table names for <literal>AFTER</literal> triggers are "
"specified using the <literal>REFERENCING</literal> clause in the standard "
"way, the row variables used in <literal>FOR EACH ROW</literal> triggers may "
"not be specified in a <literal>REFERENCING</literal> clause. They are "
"available in a manner that is dependent on the language in which the trigger "
"function is written, but is fixed for any one language. Some languages "
"effectively behave as though there is a <literal>REFERENCING</literal> "
"clause containing <literal>OLD ROW AS OLD NEW ROW AS NEW</literal>."
msgstr ""
"Тогда как имена переходных таблиц для триггеров <literal>AFTER</literal> "
"задаются предложением <literal>REFERENCING</literal> стандартным образом, "
"переменные строк, применяемые в триггерах <literal>FOR EACH ROW</literal> "
"нельзя объявлять в предложении <literal>REFERENCING</literal>. Порядок "
"обращения к таким строкам зависит от языка, на котором написана триггерная "
"функция, но для каждого языка он вполне определённый. Некоторые языки по "
"сути действуют так, как будто в команде присутствует предложение "
"<literal>REFERENCING</literal> с указанием <literal>OLD ROW AS OLD NEW ROW "
"AS NEW</literal>."

#. +> REL_10
#: ref/create_trigger.xml:646(para)
msgid ""
"The standard allows transition tables to be used with column-specific "
"<literal>UPDATE</literal> triggers, but then the set of rows that should be "
"visible in the transition tables depends on the trigger's column list. This "
"is not currently implemented by <productname>PostgreSQL</productname>."
msgstr ""
"Стандарт позволяет использовать переходные таблицы с триггерами "
"<literal>UPDATE</literal>, ограничивающими набор отслеживаемых столбцов, но "
"тогда и набор строк, видимых в переходных таблицах, должен зависеть от "
"списка целевых столбцов триггера. В настоящее время такое поведение в "
"<productname>PostgreSQL</productname> не реализовано."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:656(para)
msgid ""
"<productname>PostgreSQL</productname> only allows the execution of a user-"
"defined function for the triggered action. The standard allows the execution "
"of a number of other SQL commands, such as <command>CREATE TABLE</command>, "
"as the triggered action. This limitation is not hard to work around by "
"creating a user-defined function that executes the desired commands."
msgstr ""
"<productname>PostgreSQL</productname> позволяет задать в качестве действия "
"триггера только функцию, определённую пользователем. Стандарт допускает "
"также выполнение ряда других команд SQL, например, <command>CREATE TABLE</"
"command>. Однако это ограничение несложно преодолеть, создав "
"пользовательскую функцию, выполняющую требуемые команды."

#. It's not clear whether SQL/MED contemplates triggers on foreign tables.
#. Its <drop basic column definition> General Rules do mention the possibility
#. of a reference from a trigger column list.  On the other hand, nothing
#. overrides the fact that CREATE TRIGGER only targets base tables.  For now,
#. do not document the compatibility status of triggers on foreign tables.
#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:625(para)
msgid ""
"The <command>CREATE TRIGGER</command> statement in <productname>PostgreSQL</"
"productname> implements a subset of the <acronym>SQL</acronym> standard. The "
"following functionalities are currently missing: <placeholder-1/>"
msgstr ""
"Оператор <command>CREATE TRIGGER</command> в <productname>PostgreSQL</"
"productname> реализует подмножество возможностей, описанных в стандарте "
"<acronym>SQL</acronym>. В настоящее время в нём отсутствует следующая "
"функциональность: <placeholder-1/>"

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:669(para)
msgid ""
"SQL specifies that multiple triggers should be fired in time-of-creation "
"order. <productname>PostgreSQL</productname> uses name order, which was "
"judged to be more convenient."
msgstr ""
"В стандарте SQL определено, что несколько триггеров должны срабатывать по "
"порядку создания. <productname>PostgreSQL</productname> упорядочивает их по "
"именам, так как это было признано более удобным."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:675(para)
msgid ""
"SQL specifies that <literal>BEFORE DELETE</literal> triggers on cascaded "
"deletes fire <emphasis>after</emphasis> the cascaded <literal>DELETE</"
"literal> completes. The <productname>PostgreSQL</productname> behavior is "
"for <literal>BEFORE DELETE</literal> to always fire before the delete "
"action, even a cascading one. This is considered more consistent. There is "
"also nonstandard behavior if <literal>BEFORE</literal> triggers modify rows "
"or prevent updates during an update that is caused by a referential action. "
"This can lead to constraint violations or stored data that does not honor "
"the referential constraint."
msgstr ""
"В стандарте SQL определено, что триггеры <literal>BEFORE DELETE</literal> "
"при каскадном удалении срабатывают <emphasis>после</emphasis> завершения "
"каскадного <literal>DELETE</literal>. В <productname>PostgreSQL</"
"productname> триггеры <literal>BEFORE DELETE</literal> всегда срабатывают "
"перед операцией удаления, даже если она каскадная. Это поведение выбрано как "
"более логичное. Ещё одно отклонение от стандарта проявляется, когда триггеры "
"<literal>BEFORE</literal>, срабатывающие в результате ссылочной операции, "
"изменяют строки или не дают выполнить изменение. Это может привести к "
"нарушению ограничений или сохранению данных, не соблюдающих ссылочную "
"целостность."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:687(para)
msgid ""
"The ability to specify multiple actions for a single trigger using "
"<literal>OR</literal> is a <productname>PostgreSQL</productname> extension "
"of the SQL standard."
msgstr ""
"Возможность задать несколько действий для одного триггера с помощью "
"ключевого слова <literal>OR</literal> — реализованное в "
"<productname>PostgreSQL</productname> расширение стандарта SQL."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:693(para)
msgid ""
"The ability to fire triggers for <command>TRUNCATE</command> is a "
"<productname>PostgreSQL</productname> extension of the SQL standard, as is "
"the ability to define statement-level triggers on views."
msgstr ""
"Возможность вызывать триггеры для <command>TRUNCATE</command> — "
"реализованное в <productname>PostgreSQL</productname> расширение стандарта "
"SQL, как и возможность определять триггеры на уровне оператора для "
"представлений."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:699(para)
msgid ""
"<command>CREATE CONSTRAINT TRIGGER</command> is a <productname>PostgreSQL</"
"productname> extension of the <acronym>SQL</acronym> standard."
msgstr ""
"<command>CREATE CONSTRAINT TRIGGER</command> — реализованное в "
"<productname>PostgreSQL</productname> расширение стандарта <acronym>SQL</"
"acronym>."

#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:708(title)
msgid "See Also"
msgstr "См. также"

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#. +> REL_10 REL9_6_3 REL9_6
#: ref/create_trigger.xml:0(None)
msgid "translator-credits"
msgstr "translator-credits"

#. +> REL9_6_3 REL9_6
#: ref/create_trigger.xml:24(synopsis)
#, no-wrap
msgid ""
"CREATE [ CONSTRAINT ] TRIGGER <placeholder-1/> { BEFORE | AFTER | INSTEAD OF } { <placeholder-2/> [ OR ... ] }\n"
"    ON <placeholder-3/>\n"
"    [ FROM <placeholder-4/> ]\n"
"    [ NOT DEFERRABLE | [ DEFERRABLE ] [ INITIALLY IMMEDIATE | INITIALLY DEFERRED ] ]\n"
"    [ FOR [ EACH ] { ROW | STATEMENT } ]\n"
"    [ WHEN ( <placeholder-5/> ) ]\n"
"    EXECUTE PROCEDURE <placeholder-6/> ( <placeholder-7/> )\n"
"\n"
"<placeholder-8/>\n"
"\n"
"    INSERT\n"
"    UPDATE [ OF <placeholder-9/> [, ... ] ]\n"
"    DELETE\n"
"    TRUNCATE"
msgstr ""
"CREATE [ CONSTRAINT ] TRIGGER <placeholder-1/> { BEFORE | AFTER | INSTEAD OF } { <placeholder-2/> [ OR ... ] }\n"
"    ON <placeholder-3/>\n"
"    [ FROM <placeholder-4/> ]\n"
"    [ NOT DEFERRABLE | [ DEFERRABLE ] [ INITIALLY IMMEDIATE | INITIALLY DEFERRED ] ]\n"
"    [ FOR [ EACH ] { ROW | STATEMENT } ]\n"
"    [ WHEN ( <placeholder-5/> ) ]\n"
"    EXECUTE PROCEDURE <placeholder-6/> ( <placeholder-7/> )\n"
"\n"
"<placeholder-8/>\n"
"\n"
"    INSERT\n"
"    UPDATE [ OF <placeholder-9/> [, ... ] ]\n"
"    DELETE\n"
"    TRUNCATE"

#. +> REL9_6_3 REL9_6
#: ref/create_trigger.xml:45(para)
msgid ""
"<command>CREATE TRIGGER</command> creates a new trigger. The trigger will be "
"associated with the specified table, view, or foreign table and will execute "
"the specified function <replaceable class=\"parameter\">function_name</"
"replaceable> when certain events occur."
msgstr ""
"<command>CREATE TRIGGER</command> создаёт новый триггер. Триггер будет "
"связан с указанной таблицей, представлением или сторонней таблицей и будет "
"выполнять заданную функцию <replaceable class=\"parameter\">имя_функции</"
"replaceable> при определённых событиях."

#. +> REL9_6_3 REL9_6
#: ref/create_trigger.xml:70(para)
msgid ""
"A trigger that is marked <literal>FOR EACH ROW</literal> is called once for "
"every row that the operation modifies. For example, a <command>DELETE</"
"command> that affects 10 rows will cause any <literal>ON DELETE</literal> "
"triggers on the target relation to be called 10 separate times, once for "
"each deleted row. In contrast, a trigger that is marked <literal>FOR EACH "
"STATEMENT</literal> only executes once for any given operation, regardless "
"of how many rows it modifies (in particular, an operation that modifies zero "
"rows will still result in the execution of any applicable <literal>FOR EACH "
"STATEMENT</literal> triggers). Note that with an <command>INSERT</command> "
"with an <literal>ON CONFLICT DO UPDATE</literal> clause, both "
"<command>INSERT</command> and <command>UPDATE</command> statement level "
"trigger will be fired."
msgstr ""
"Триггер с пометкой <literal>FOR EACH ROW</literal> вызывается один раз для "
"каждой строки, изменяемой в процессе операции. Например, операция "
"<command>DELETE</command>, удаляющая 10 строк, приведёт к срабатыванию всех "
"триггеров <literal>ON DELETE</literal> в целевом отношении 10 раз подряд, по "
"одному разу для каждой удаляемой строки. Триггер с пометкой <literal>FOR "
"EACH STATEMENT</literal>, напротив, вызывается только один раз для "
"конкретной операции, вне зависимости от того, как много строк она изменила "
"(в частности, при выполнении операции, изменяющей ноль строк, всё равно "
"будут вызваны все триггеры <literal>FOR EACH STATEMENT</literal>). Заметьте, "
"что при выполнении <command>INSERT</command> с предложением <literal>ON "
"CONFLICT DO UPDATE</literal> сработают оба триггера уровня операторов, для "
"<command>INSERT</command> и для <command>UPDATE</command>."

#. +> REL9_6_3 REL9_6
#: ref/create_trigger.xml:167(para)
msgid ""
"When the <literal>CONSTRAINT</literal> option is specified, this command "
"creates a <firstterm>constraint trigger</firstterm>. This is the same as a "
"regular trigger except that the timing of the trigger firing can be adjusted "
"using <xref linkend=\"sql-set-constraints\"/>. Constraint triggers must be "
"<literal>AFTER ROW</literal> triggers on tables. They can be fired either at "
"the end of the statement causing the triggering event, or at the end of the "
"containing transaction; in the latter case they are said to be "
"<firstterm>deferred</firstterm>. A pending deferred-trigger firing can also "
"be forced to happen immediately by using <command>SET CONSTRAINTS</command>. "
"Constraint triggers are expected to raise an exception when the constraints "
"they implement are violated."
msgstr ""
"Когда указывается параметр <literal>CONSTRAINT</literal>, эта команда "
"создаёт <firstterm>триггер ограничения</firstterm>. Он подобен обычным "
"триггерам, но отличается тем, что время его срабатывания можно изменить "
"командой <xref linkend=\"sql-set-constraints\"/>. Триггеры ограничений "
"должны работать в режиме <literal>AFTER ROW</literal>. Они могут срабатывать "
"либо в конце оператора, вызвавшего целевое событие, либо в конце содержащей "
"его транзакции; в последнем случае они называются <firstterm>отложенными</"
"firstterm>. Срабатывание ожидающего отложенного триггера можно вызвать "
"немедленно, воспользовавшись командой <command>SET CONSTRAINTS</command>. "
"Предполагается, что триггеры ограничений будут генерировать исключения при "
"нарушении ограничений."

#. +> REL9_6_3 REL9_6
#: ref/create_trigger.xml:181(para)
msgid ""
"<command>SELECT</command> does not modify any rows so you cannot create "
"<command>SELECT</command> triggers. Rules and views are more appropriate in "
"such cases."
msgstr ""
"<command>SELECT</command> не изменяет никакие строки, поэтому создавать "
"триггеры для <command>SELECT</command> нельзя. В случае подобной потребности "
"будут более уместны правила и представления."

#. +> REL9_6_3 REL9_6
#: ref/create_trigger.xml:226(para)
msgid ""
"One of <literal>INSERT</literal>, <literal>UPDATE</literal>, "
"<literal>DELETE</literal>, or <literal>TRUNCATE</literal>; this specifies "
"the event that will fire the trigger. Multiple events can be specified using "
"<literal>OR</literal>."
msgstr ""
"Принимает одно из значений: <literal>INSERT</literal>, <literal>UPDATE</"
"literal>, <literal>DELETE</literal> или <literal>TRUNCATE</literal>; этот "
"параметр определяет событие, при котором будет срабатывать триггер. "
"Несколько событий можно указать, добавив между ними слово <literal>OR</"
"literal>."

#. +> REL9_6_3 REL9_6
#: ref/create_trigger.xml:243(para)
msgid ""
"<literal>INSTEAD OF UPDATE</literal> events do not support lists of columns."
msgstr ""
"Для событий <literal>INSTEAD OF UPDATE</literal> список столбцов задать "
"нельзя."

#. +> REL9_6_3 REL9_6
#: ref/create_trigger.xml:426(para)
msgid ""
"Execute the function <function>check_account_update</function> whenever a "
"row of the table <literal>accounts</literal> is about to be updated: "
"<placeholder-1/> The same, but only execute the function if column "
"<literal>balance</literal> is specified as a target in the <command>UPDATE</"
"command> command: <placeholder-2/> This form only executes the function if "
"column <literal>balance</literal> has in fact changed value: <placeholder-3/"
"> Call a function to log updates of <literal>accounts</literal>, but only if "
"something changed: <placeholder-4/> Execute the function "
"<function>view_insert_row</function> for each row to insert rows into the "
"tables underlying a view: <placeholder-5/>"
msgstr ""
"Выполнение функции <function>check_account_update</function> перед любым "
"изменением строк в таблице <literal>accounts</literal>: <placeholder-1/> То "
"же самое, но функция триггера будет выполняться, только если столбец "
"<literal>balance</literal> присутствует в списке целевых столбцов команды "
"<command>UPDATE</command>: <placeholder-2/> В этом примере функция будет "
"выполняться, если значение столбца <literal>balance</literal> в "
"действительности изменилось: <placeholder-3/> Вызов функции, ведущей журнал "
"изменений в <literal>accounts</literal>, но только если что-то изменилось: "
"<placeholder-4/> Выполнение для каждой строки функции "
"<function>view_insert_row</function>, которая будет вставлять строки в "
"нижележащие таблицы представления: <placeholder-5/>"

#. +> REL9_6_3 REL9_6
#: ref/create_trigger.xml:505(para)
msgid ""
"SQL allows you to define aliases for the <quote>old</quote> and <quote>new</"
"quote> rows or tables for use in the definition of the triggered action (e."
"g., <literal>CREATE TRIGGER ... ON tablename REFERENCING OLD ROW AS somename "
"NEW ROW AS othername ...</literal>). Since <productname>PostgreSQL</"
"productname> allows trigger procedures to be written in any number of user-"
"defined languages, access to the data is handled in a language-specific way."
msgstr ""
"SQL позволяет определить синонимы для строк <quote>old</quote> и <quote>new</"
"quote> или таблиц, которые затем можно будет использовать в определении "
"действия триггера (например, <literal>CREATE TRIGGER ... ON имя_таблицы "
"REFERENCING OLD ROW AS некоторое_имя NEW ROW AS другое_имя...</literal>). "
"<productname>PostgreSQL</productname> позволяет писать процедуры триггеров "
"на различных языках, так что механизм доступа к данным зависит от "
"конкретного языка."

#. +> REL9_6_3 REL9_6
#: ref/create_trigger.xml:518(para)
msgid ""
"<productname>PostgreSQL</productname> does not allow the old and new tables "
"to be referenced in statement-level triggers, i.e., the tables that contain "
"all the old and/or new rows, which are referred to by the <literal>OLD "
"TABLE</literal> and <literal>NEW TABLE</literal> clauses in the "
"<acronym>SQL</acronym> standard."
msgstr ""
"<productname>PostgreSQL</productname> не позволяет обращаться к старой и "
"новой таблице в триггерах на уровне оператора, т. е. к таблицам, содержащим "
"все старые и/или новые строки, обозначаемые как <literal>OLD TABLE</literal> "
"и <literal>NEW TABLE</literal> в стандарте <acronym>SQL</acronym>."

#~ msgid ""
#~ "The <literal>REFERENCING</literal> option is only allowed for an "
#~ "<literal>AFTER</literal> trigger which is not a constraint trigger. "
#~ "<literal>OLD TABLE</literal> may only be specified once, and only on a "
#~ "trigger which can fire on <literal>UPDATE</literal> or <literal>DELETE</"
#~ "literal>. <literal>NEW TABLE</literal> may only be specified once, and "
#~ "only on a trigger which can fire on <literal>UPDATE</literal> or "
#~ "<literal>INSERT</literal>."
#~ msgstr ""
#~ "Указание <literal>REFERENCING</literal> допускается только для триггера "
#~ "<literal>AFTER</literal>, но не для триггера ограничения. <literal>OLD "
#~ "TABLE</literal> может задаваться только один раз и только для триггера, "
#~ "который может срабатывать при событии <literal>UPDATE</literal> или "
#~ "<literal>DELETE</literal>. <literal>NEW TABLE</literal> тоже может "
#~ "задаваться только один раз и только для триггера, срабатывающего при "
#~ "событии <literal>UPDATE</literal> или <literal>INSERT</literal>."

#~ msgid ""
#~ "This immediately precedes the declaration of one or two relations which "
#~ "can be used to read the before and/or after images of all rows directly "
#~ "affected by the triggering statement. An <literal>AFTER EACH ROW</"
#~ "literal> trigger is allowed to use both these transition relation names "
#~ "and the row names (<literal>OLD</literal> and <literal>NEW</literal>) "
#~ "which reference each individual row for which the trigger fires."
#~ msgstr ""
#~ "Это указание непосредственно предшествует определению одного или двух "
#~ "отношений, через которые можно прочитать состояние до/после операции всех "
#~ "строк, непосредственно затрагиваемых оператором, вызвавшим срабатывание "
#~ "триггера. Триггер <literal>AFTER EACH ROW</literal> может использовать "
#~ "оба имени переходных отношений и имена строк (<literal>OLD</literal> и "
#~ "<literal>NEW</literal>), ссылающиеся на отдельные строки, для которых "
#~ "срабатывает триггер."

#~ msgid ""
#~ "This specifies whether the named relation contains the before or after "
#~ "images for rows affected by the statement which fired the trigger."
#~ msgstr ""
#~ "Это указание определяет, какое состояние (до или после операции) строк, "
#~ "затрагиваемых оператором, который вызвал срабатывание триггера, будет "
#~ "содержаться в именованном отношении."
