# Alexander Lakhin <a.lakhin@postgrespro.ru>, 2012, 2013, 2015, 2016.
# Pavel Luzanov <p.luzanov@postgrespro.ru>, 2015, 2016.
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2016-08-19 11:33+0300\n"
"PO-Revision-Date: 2016-04-13 09:36+0300\n"
"Language-Team: Russian <pgsql-docs@lists.postgrespro.ru>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Lokalize 2.0\n"

#: xplang.xml:5(title)
msgid "Procedural Languages"
msgstr "Процедурные языки"

#: xplang.xml:7(indexterm)
msgid "<primary>procedural language</primary>"
msgstr "<primary>процедурный язык</primary>"

#: xplang.xml:11(para)
msgid ""
"<productname>PostgreSQL</productname> allows user-defined functions to be "
"written in other languages besides SQL and C. These other languages are "
"generically called <firstterm>procedural languages</firstterm> (<acronym>PL</"
"acronym>s). For a function written in a procedural language, the database "
"server has no built-in knowledge about how to interpret the function's "
"source text. Instead, the task is passed to a special handler that knows the "
"details of the language. The handler could either do all the work of "
"parsing, syntax analysis, execution, etc. itself, or it could serve as "
"<quote>glue</quote> between <productname>PostgreSQL</productname> and an "
"existing implementation of a programming language. The handler itself is a C "
"language function compiled into a shared object and loaded on demand, just "
"like any other C function."
msgstr ""
"<productname>PostgreSQL</productname> позволяет разрабатывать "
"пользовательские функции не только на SQL и C, но и на других языках. Эти "
"языки в целом называются <firstterm>процедурными языками</firstterm> "
"(<acronym>PL</acronym>, Procedural Language). Если функция написана на "
"процедурном языке, сервер баз данных сам по себе не знает, как "
"интерпретировать её исходный текст. Вместо этого он передаёт эту задачу "
"специальному обработчику, понимающему данный язык. Обработчик может либо "
"выполнить всю работу по разбору, синтаксическому анализу, выполнению кода и "
"т. д., либо действовать как <quote>прослойка</quote> между "
"<productname>PostgreSQL</productname> и внешним исполнителем языка "
"программирования. Сам обработчик представляет собой функцию на языке C, "
"скомпилированную в виде разделяемого объекта и загружаемую по требованию, "
"как и любая другая функция на C."

#: xplang.xml:28(para)
msgid ""
"There are currently four procedural languages available in the standard "
"<productname>PostgreSQL</productname> distribution: <application>PL/pgSQL</"
"application> (<xref linkend=\"plpgsql\"/>), <application>PL/Tcl</"
"application> (<xref linkend=\"pltcl\"/>), <application>PL/Perl</application> "
"(<xref linkend=\"plperl\"/>), and <application>PL/Python</application> "
"(<xref linkend=\"plpython\"/>). There are additional procedural languages "
"available that are not included in the core distribution. <xref linkend="
"\"external-projects\"/> has information about finding them. In addition "
"other languages can be defined by users; the basics of developing a new "
"procedural language are covered in <xref linkend=\"plhandler\"/>."
msgstr ""
"В настоящее время стандартный дистрибутив <productname>PostgreSQL</"
"productname> включает четыре процедурных языка: <application>PL/pgSQL</"
"application> (<xref linkend=\"plpgsql\"/>), <application>PL/Tcl</"
"application> (<xref linkend=\"pltcl\"/>), <application>PL/Perl</application> "
"(<xref linkend=\"plperl\"/>) и <application>PL/Python</application> (<xref "
"linkend=\"plpython\"/>). Существуют и другие процедурные языки, поддержка "
"которых не включена в базовый дистрибутив. Информацию о них можно найти в "
"<xref remap=\"6\" linkend=\"external-projects\"/>. Кроме того, пользователи "
"могут реализовать и другие языки; основы разработки нового процедурного "
"языка рассматриваются в <xref remap=\"6\" linkend=\"plhandler\"/>."

#: xplang.xml:43(title)
msgid "Installing Procedural Languages"
msgstr "Установка процедурных языков"

#: xplang.xml:45(para)
msgid ""
"A procedural language must be <quote>installed</quote> into each database "
"where it is to be used. But procedural languages installed in the database "
"<literal>template1</literal> are automatically available in all subsequently "
"created databases, since their entries in <literal>template1</literal> will "
"be copied by <command>CREATE DATABASE</command>. So the database "
"administrator can decide which languages are available in which databases "
"and can make some languages available by default if desired."
msgstr ""
"Прежде всего, процедурный язык должен быть <quote>установлен</quote> в "
"каждую базу данных, где он будет использоваться. Но процедурные языки, "
"устанавливаемые в базу данных <literal>template1</literal>, автоматически "
"становятся доступными во всех впоследствии создаваемых базах, так как их "
"определения в <literal>template1</literal> будут скопированы командой "
"<command>CREATE DATABASE</command>. Таким образом, администратор баз данных "
"может выбрать, какие языки будут доступны в определённых базах данных, и при "
"желании сделать некоторые языки доступными по умолчанию."

#: xplang.xml:65(programlisting)
#, no-wrap
msgid "createlang plperl template1"
msgstr "createlang plperl template1"

#: xplang.xml:56(para)
msgid ""
"For the languages supplied with the standard distribution, it is only "
"necessary to execute <command>CREATE EXTENSION</command> "
"<replaceable>language_name</replaceable> to install the language into the "
"current database. Alternatively, the program <xref linkend=\"app-createlang"
"\"/> can be used to do this from the shell command line. For example, to "
"install the language <application>PL/Perl</application> into the database "
"<literal>template1</literal>, use: <placeholder-1/> The manual procedure "
"described below is only recommended for installing languages that have not "
"been packaged as extensions."
msgstr ""
"Для языков, включённых в стандартный дистрибутив, достаточно выполнить "
"команду <command>CREATE EXTENSION</command> <replaceable>имя_языка</"
"replaceable>, чтобы установить язык в текущую базу данных. Чтобы сделать это "
"из командной строки оболочки, также можно воспользоваться программой <xref "
"linkend=\"app-createlang\"/>. Например, чтобы установить в базу данных "
"<literal>template1</literal> язык <application>PL/Perl</application>, "
"выполните: <placeholder-1/> Описанная ниже ручная процедура рекомендуется "
"только для установки языков, не упакованных в виде расширений."

#: xplang.xml:73(title)
msgid "Manual Procedural Language Installation"
msgstr "Установка процедурного языка вручную"

#: xplang.xml:77(para)
msgid ""
"A procedural language is installed in a database in five steps, which must "
"be carried out by a database superuser. In most cases the required SQL "
"commands should be packaged as the installation script of an "
"<quote>extension</quote>, so that <command>CREATE EXTENSION</command> can be "
"used to execute them."
msgstr ""
"Процедурный язык устанавливается в базу данных в пять этапов, и выполнять их "
"должен администратор баз данных. В большинстве случаев необходимые команды "
"SQL следует упаковать в виде установочного скрипта <quote>расширения</"
"quote>, чтобы их можно было выполнить, воспользовавшись командой "
"<command>CREATE EXTENSION</command>."

#: xplang.xml:86(para)
msgid ""
"The shared object for the language handler must be compiled and installed "
"into an appropriate library directory. This works in the same way as "
"building and installing modules with regular user-defined C functions does; "
"see <xref linkend=\"dfunc\"/>. Often, the language handler will depend on an "
"external library that provides the actual programming language engine; if "
"so, that must be installed as well."
msgstr ""
"Разделяемый объект для обработчика языка должен быть скомпилирован и "
"установлен в соответствующий каталог библиотек. Это в принципе не отличается "
"от сборки и установки дополнительных модулей с обычными функциями на языке "
"C; см. <xref remap=\"4\" linkend=\"dfunc\"/>. Часто обработчик языка зависит "
"от внешней библиотеки, в которой собственно реализован исполнитель языка "
"программирования; в таких случаях нужно установить и эту библиотеку."

#: xplang.xml:97(para)
msgid ""
"The handler must be declared with the command <synopsis>\n"
"CREATE FUNCTION <replaceable>handler_function_name</replaceable>()\n"
"    RETURNS language_handler\n"
"    AS '<replaceable>path-to-shared-object</replaceable>'\n"
"    LANGUAGE C;\n"
"</synopsis> The special return type of <type>language_handler</type> tells "
"the database system that this function does not return one of the defined "
"<acronym>SQL</acronym> data types and is not directly usable in "
"<acronym>SQL</acronym> statements."
msgstr ""
"Обработчик должен быть объявлен командой <synopsis>\n"
"CREATE FUNCTION <replaceable>имя_функции_обработчика</replaceable>()\n"
"    RETURNS language_handler\n"
"    AS '<replaceable>путь-к-разделяемому-объекту</replaceable>'\n"
"    LANGUAGE C;\n"
"</synopsis> Специальный тип возврата <type>language_handler</type> говорит "
"СУБД, что эта функция не возвращает какой-либо определённый тип данных "
"<acronym>SQL</acronym>, и значит её нельзя использовать непосредственно в "
"операторах <acronym>SQL</acronym>."

#: xplang.xml:113(para)
msgid ""
"Optionally, the language handler can provide an <quote>inline</quote> "
"handler function that executes anonymous code blocks (<xref linkend=\"sql-do"
"\"/> commands) written in this language. If an inline handler function is "
"provided by the language, declare it with a command like <synopsis>\n"
"CREATE FUNCTION <replaceable>inline_function_name</replaceable>(internal)\n"
"    RETURNS void\n"
"    AS '<replaceable>path-to-shared-object</replaceable>'\n"
"    LANGUAGE C;\n"
"</synopsis>"
msgstr ""
"Дополнительно обработчик языка может предоставить функцию обработки "
"<quote>внедрённого кода</quote>, которая будет выполнять анонимные блоки "
"кода (команды <xref linkend=\"sql-do\"/>), написанные на этом языке. Если "
"для языка есть обработчик внедрённого кода, объявите его такой командой: "
"<synopsis>\n"
"CREATE FUNCTION <replaceable>имя_обработчика_внедрённого_кода</"
"replaceable>(internal)\n"
"    RETURNS void\n"
"    AS '<replaceable>путь-к-разделяемому-объекту</replaceable>'\n"
"    LANGUAGE C;\n"
"</synopsis>"

#: xplang.xml:129(para)
msgid ""
"Optionally, the language handler can provide a <quote>validator</quote> "
"function that checks a function definition for correctness without actually "
"executing it. The validator function is called by <command>CREATE FUNCTION</"
"command> if it exists. If a validator function is provided by the language, "
"declare it with a command like <synopsis>\n"
"CREATE FUNCTION <replaceable>validator_function_name</replaceable>(oid)\n"
"    RETURNS void\n"
"    AS '<replaceable>path-to-shared-object</replaceable>'\n"
"    LANGUAGE C STRICT;\n"
"</synopsis>"
msgstr ""
"Кроме того, обработчик языка может предоставить функцию <quote>проверки</"
"quote>, которая будет проверять корректность определения функции, собственно "
"не выполняя её. Функция проверки, если она существует, вызывается командой "
"<command>CREATE FUNCTION</command>. Если такая функция для языка определена, "
"объявите её такой командой: <synopsis>\n"
"CREATE FUNCTION <replaceable>имя_функции_проверки</replaceable>(oid)\n"
"    RETURNS void\n"
"    AS '<replaceable>путь-к-разделяемому-объекту</replaceable>'\n"
"    LANGUAGE C STRICT;\n"
"</synopsis>"

#: xplang.xml:145(para)
msgid ""
"Finally, the PL must be declared with the command <synopsis>\n"
"CREATE <optional>TRUSTED</optional> <optional>PROCEDURAL</optional> LANGUAGE "
"<replaceable>language-name</replaceable>\n"
"    HANDLER <replaceable>handler_function_name</replaceable>\n"
"    <optional>INLINE <replaceable>inline_function_name</replaceable></"
"optional>\n"
"    <optional>VALIDATOR <replaceable>validator_function_name</replaceable></"
"optional> ;\n"
"</synopsis> The optional key word <literal>TRUSTED</literal> specifies that "
"the language does not grant access to data that the user would not otherwise "
"have. Trusted languages are designed for ordinary database users (those "
"without superuser privilege) and allows them to safely create functions and "
"trigger procedures. Since PL functions are executed inside the database "
"server, the <literal>TRUSTED</literal> flag should only be given for "
"languages that do not allow access to database server internals or the file "
"system. The languages <application>PL/pgSQL</application>, <application>PL/"
"Tcl</application>, and <application>PL/Perl</application> are considered "
"trusted; the languages <application>PL/TclU</application>, <application>PL/"
"PerlU</application>, and <application>PL/PythonU</application> are designed "
"to provide unlimited functionality and should <emphasis>not</emphasis> be "
"marked trusted."
msgstr ""
"Наконец, процедурный язык должен быть объявлен командой <synopsis>\n"
"CREATE <optional>TRUSTED</optional> <optional>PROCEDURAL</optional> LANGUAGE "
"<replaceable>имя-языка</replaceable>\n"
"    HANDLER <replaceable>имя_функции_обработчика</replaceable>\n"
"    <optional>INLINE <replaceable>имя_обработчика_внедрённого_кода</"
"replaceable></optional>\n"
"    <optional>VALIDATOR <replaceable>имя_функции_проверки</replaceable></"
"optional> ;\n"
"</synopsis> Необязательное ключевое слово <literal>TRUSTED</literal> "
"(доверенный) указывает, что язык не предоставляет пользователю доступ к "
"данным, которого он не имел бы без него. Доверенные языки предназначены для "
"обычных пользователей баз данных, не имеющих прав суперпользователя, и их "
"можно использовать для безопасного создания функций и триггеров. Так как "
"функции PL выполняются внутри сервера баз данных, флаг <literal>TRUSTED</"
"literal> следует устанавливать только для тех языков, которые не позволяют "
"обращаться к внутренним механизмам сервера или файловой системе. Языки "
"<application>PL/pgSQL</application>, <application>PL/Tcl</application> и "
"<application>PL/Perl</application> считаются доверенными; языки "
"<application>PL/TclU</application>, <application>PL/PerlU</application> и "
"<application>PL/PythonU</application> предоставляют неограниченную "
"функциональность и их <emphasis>не</emphasis> следует помечать как "
"доверенные."

#: xplang.xml:175(para)
msgid ""
"<xref linkend=\"xplang-install-example\"/> shows how the manual installation "
"procedure would work with the language <application>PL/Perl</application>."
msgstr ""
"<xref remap=\"6\" linkend=\"xplang-install-example\"/> показывает, как "
"выполняется процедура ручной установки для языка <application>PL/Perl</"
"application>."

#: xplang.xml:182(title)
msgid "Manual Installation of <application>PL/Perl</application>"
msgstr "Установка <application>PL/Perl</application> вручную"

#: xplang.xml:189(programlisting)
#, no-wrap
msgid ""
"CREATE FUNCTION plperl_call_handler() RETURNS language_handler AS\n"
"    '$libdir/plperl' LANGUAGE C;"
msgstr ""
"CREATE FUNCTION plperl_call_handler() RETURNS language_handler AS\n"
"    '$libdir/plperl' LANGUAGE C;"

#: xplang.xml:184(para)
msgid ""
"The following command tells the database server where to find the shared "
"object for the <application>PL/Perl</application> language's call handler "
"function: <placeholder-1/>"
msgstr ""
"Следующая команда говорит серверу баз данных, где найти разделяемый объект "
"для функции-обработчика языка <application>PL/Perl</application>: "
"<placeholder-1/>"

#: xplang.xml:199(programlisting)
#, no-wrap
msgid ""
"CREATE FUNCTION plperl_inline_handler(internal) RETURNS void AS\n"
"    '$libdir/plperl' LANGUAGE C;\n"
"\n"
"CREATE FUNCTION plperl_validator(oid) RETURNS void AS\n"
"    '$libdir/plperl' LANGUAGE C STRICT;"
msgstr ""
"CREATE FUNCTION plperl_inline_handler(internal) RETURNS void AS\n"
"    '$libdir/plperl' LANGUAGE C;\n"
"\n"
"CREATE FUNCTION plperl_validator(oid) RETURNS void AS\n"
"    '$libdir/plperl' LANGUAGE C STRICT;"

#: xplang.xml:195(para)
msgid ""
"<application>PL/Perl</application> has an inline handler function and a "
"validator function, so we declare those too: <placeholder-1/>"
msgstr ""
"Для <application>PL/Perl</application> реализованы обработчик внедрённого "
"кода и функция проверки, так что их мы тоже объявим: <placeholder-1/>"

#: xplang.xml:210(programlisting)
#, no-wrap
msgid ""
"CREATE TRUSTED PROCEDURAL LANGUAGE plperl\n"
"    HANDLER plperl_call_handler\n"
"    INLINE plperl_inline_handler\n"
"    VALIDATOR plperl_validator;"
msgstr ""
"CREATE TRUSTED PROCEDURAL LANGUAGE plperl\n"
"    HANDLER plperl_call_handler\n"
"    INLINE plperl_inline_handler\n"
"    VALIDATOR plperl_validator;"

#: xplang.xml:208(para)
msgid ""
"The command: <placeholder-1/> then defines that the previously declared "
"functions should be invoked for functions and trigger procedures where the "
"language attribute is <literal>plperl</literal>."
msgstr ""
"Следующая команда: <placeholder-1/> определяет, что ранее объявленные "
"функции должны вызываться для функций и триггерных процедур с атрибутом "
"языка <literal>plperl</literal>."

#: xplang.xml:222(para)
msgid ""
"In a default <productname>PostgreSQL</productname> installation, the handler "
"for the <application>PL/pgSQL</application> language is built and installed "
"into the <quote>library</quote> directory; furthermore, the <application>PL/"
"pgSQL</application> language itself is installed in all databases. If "
"<application>Tcl</application> support is configured in, the handlers for "
"<application>PL/Tcl</application> and <application>PL/TclU</application> are "
"built and installed in the library directory, but the language itself is not "
"installed in any database by default. Likewise, the <application>PL/Perl</"
"application> and <application>PL/PerlU</application> handlers are built and "
"installed if Perl support is configured, and the <application>PL/PythonU</"
"application> handler is installed if Python support is configured, but these "
"languages are not installed by default."
msgstr ""
"В стандартной инсталляции <productname>PostgreSQL</productname> обработчик "
"языка <application>PL/pgSQL</application> уже собран и установлен в каталог "
"<quote>библиотек</quote>; более того, сам язык <application>PL/pgSQL</"
"application> установлен во всех базах данных. Если при сборке "
"сконфигурирована поддержка <application>Tcl</application>, то обработчики "
"для <application>PL/Tcl</application> и <application>PL/TclU</application> "
"собираются и устанавливаются в каталог библиотек, но сам язык по умолчанию в "
"базы данных не устанавливается. Подобным образом, если сконфигурирована "
"поддержка Perl, собираются и устанавливаются обработчики <application>PL/"
"Perl</application> и <application>PL/PerlU</application>, а при включении "
"поддержки Python устанавливается обработчик <application>PL/PythonU</"
"application>, но в базы данных эти языки по умолчанию не устанавливаются."

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: xplang.xml:0(None)
msgid "translator-credits"
msgstr "translator-credits"
